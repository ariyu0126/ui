{"version":3,"sources":["../node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs","../node_modules/next/src/shared/lib/router/utils/querystring.ts","../node_modules/next/src/shared/lib/router/utils/format-url.ts","../node_modules/next/src/shared/lib/router/utils/omit.ts","../node_modules/next/src/shared/lib/utils.ts","../node_modules/next/src/shared/lib/router/utils/remove-trailing-slash.ts","../node_modules/next/src/shared/lib/router/utils/parse-path.ts","../node_modules/next/src/client/normalize-trailing-slash.ts","../node_modules/next/src/shared/lib/router/utils/path-has-prefix.ts","../node_modules/next/src/client/has-base-path.ts","../node_modules/next/src/shared/lib/router/utils/is-local-url.ts","../node_modules/next/src/shared/lib/router/utils/sorted-routes.ts","../node_modules/next/src/shared/lib/page-path/ensure-leading-slash.ts","../node_modules/next/src/shared/lib/segment.ts","../node_modules/next/src/shared/lib/router/utils/app-paths.ts","../node_modules/next/src/shared/lib/router/utils/interception-routes.ts","../node_modules/next/src/shared/lib/router/utils/is-dynamic.ts","../node_modules/next/src/shared/lib/router/utils/index.ts","../node_modules/next/src/shared/lib/router/utils/route-matcher.ts","../node_modules/next/src/lib/constants.ts","../node_modules/next/src/shared/lib/escape-regexp.ts","../node_modules/next/src/shared/lib/router/utils/route-regex.ts","../node_modules/next/src/shared/lib/router/utils/interpolate-as.ts","../node_modules/next/src/client/resolve-href.ts","../node_modules/next/src/shared/lib/router/utils/add-path-prefix.ts","../node_modules/next/src/shared/lib/router/utils/add-locale.ts","../node_modules/next/src/client/add-locale.ts","../node_modules/@swc/helpers/cjs/_interop_require_default.cjs","../node_modules/next/src/shared/lib/router-context.shared-runtime.ts","../node_modules/next/src/client/request-idle-callback.ts","../node_modules/next/src/client/use-intersection.tsx","../node_modules/next/src/shared/lib/i18n/normalize-locale-path.ts","../node_modules/next/src/client/normalize-locale-path.ts","../node_modules/next/src/shared/lib/i18n/detect-domain-locale.ts","../node_modules/next/src/client/detect-domain-locale.ts","../node_modules/next/src/client/get-domain-locale.ts","../node_modules/next/src/client/add-base-path.ts","../node_modules/next/src/client/use-merged-ref.ts","../node_modules/next/src/shared/lib/utils/error-once.ts","../node_modules/next/src/client/link.tsx","../node_modules/next/link.js","../src/components/Icon/index.tsx","../src/components/Button/Button.tsx","../src/components/Button/ButtonLink.tsx","../src/components/Button/ButtonGroup.tsx","../src/components/Button/index.tsx","../src/components/Checkbox/Checkbox.tsx","../src/components/Checkbox/CheckboxGroup.tsx","../src/components/Checkbox/index.tsx","../src/components/Flex/index.tsx","../src/lib/getValidationMessage.tsx","../src/components/Input/Input.tsx","../src/components/Input/InputText.tsx","../src/components/Input/InputPassword.tsx","../src/components/Input/InputEmail.tsx","../src/components/Input/InputNumber.tsx","../src/components/Input/InputTel.tsx","../src/components/Input/index.tsx","../src/components/Pagination/index.tsx","../src/components/Radio/Radio.tsx","../src/components/Radio/RadioGroup.tsx","../src/components/Radio/index.tsx","../src/components/Selectbox/index.tsx","../src/components/SourceCodeViewer.tsx","../src/components/Table/index.tsx","../src/components/Textarea/index.tsx","../src/components/Typography/Title.tsx","../src/components/Typography/Text.tsx","../src/components/Typography/index.tsx"],"names":["nodeInterop","assign","searchParamsToUrlQuery","urlQueryToSearchParams","searchParams","query","key","value","entries","existing","Array","isArray","push","stringifyUrlQueryParam","param","isNaN","String","URLSearchParams","Object","item","append","set","target","searchParamsList","keys","delete","formatUrl","formatWithValidation","urlObjectKeys","slashedProtocols","urlObj","auth","hostname","protocol","pathname","hash","host","encodeURIComponent","replace","indexOf","port","querystring","search","endsWith","slashes","test","url","process","env","NODE_ENV","forEach","includes","console","warn","omit","object","omitted","DecodeError","MiddlewareNotFoundError","MissingStaticPage","NormalizeError","PageNotFoundError","SP","ST","WEB_VITALS","execOnce","getDisplayName","getLocationOrigin","getURL","isAbsoluteUrl","isResSent","loadGetInitialProps","normalizeRepeatedSlashes","stringifyError","fn","used","result","args","ABSOLUTE_URL_REGEX","window","location","href","origin","substring","length","Component","displayName","name","res","finished","headersSent","urlParts","split","urlNoQuery","slice","join","App","ctx","prototype","getInitialProps","message","Error","pageProps","props","performance","every","method","constructor","page","code","error","JSON","stringify","stack","removeTrailingSlash","route","parsePath","path","hashIndex","queryIndex","hasQuery","undefined","normalizePathTrailingSlash","startsWith","__NEXT_MANUAL_TRAILING_SLASH","__NEXT_TRAILING_SLASH","pathHasPrefix","prefix","hasBasePath","basePath","__NEXT_ROUTER_BASEPATH","isLocalURL","locationOrigin","resolved","URL","_","getSortedRouteObjects","getSortedRoutes","UrlNode","insert","urlPath","_insert","filter","Boolean","smoosh","_smoosh","childrenPaths","children","sort","slugName","splice","restSlugName","optionalRestSlugName","routes","map","c","get","reduce","prev","curr","placeholder","r","unshift","urlPaths","slugNames","isCatchAll","nextSegment","handleSlug","previousSlug","nextSlug","slug","segmentName","isOptional","has","Map","normalizedPages","root","pagePath","objects","getter","indexes","pathnames","i","sorted","ensureLeadingSlash","DEFAULT_SEGMENT_KEY","PAGE_SEGMENT_KEY","addSearchParamsIfPageSegment","isGroupSegment","isParallelRouteSegment","segment","isPageSegment","stringifiedQuery","normalizeAppPath","normalizeRscURL","index","segments","INTERCEPTION_ROUTE_MARKERS","extractInterceptionRouteInformation","isInterceptionRouteAppPath","find","m","interceptingRoute","marker","interceptedRoute","concat","splitInterceptingRoute","isDynamicRoute","TEST_ROUTE","TEST_STRICT_ROUTE","strict","getRouteMatcher","re","groups","routeMatch","exec","decode","decodeURIComponent","params","group","match","pos","repeat","entry","ACTION_SUFFIX","APP_DIR_ALIAS","CACHE_ONE_YEAR","DOT_NEXT_ALIAS","ESLINT_DEFAULT_DIRS","GSP_NO_RETURNED_VALUE","GSSP_COMPONENT_MEMBER_ERROR","GSSP_NO_RETURNED_VALUE","INFINITE_CACHE","INSTRUMENTATION_HOOK_FILENAME","MATCHED_PATH_HEADER","MIDDLEWARE_FILENAME","MIDDLEWARE_LOCATION_REGEXP","NEXT_BODY_SUFFIX","NEXT_CACHE_IMPLICIT_TAG_ID","NEXT_CACHE_REVALIDATED_TAGS_HEADER","NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER","NEXT_CACHE_SOFT_TAG_MAX_LENGTH","NEXT_CACHE_TAGS_HEADER","NEXT_CACHE_TAG_MAX_ITEMS","NEXT_CACHE_TAG_MAX_LENGTH","NEXT_DATA_SUFFIX","NEXT_INTERCEPTION_MARKER_PREFIX","NEXT_META_SUFFIX","NEXT_QUERY_PARAM_PREFIX","NEXT_RESUME_HEADER","NON_STANDARD_NODE_ENV","PAGES_DIR_ALIAS","PRERENDER_REVALIDATE_HEADER","PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER","PUBLIC_DIR_MIDDLEWARE_CONFLICT","ROOT_DIR_ALIAS","RSC_ACTION_CLIENT_WRAPPER_ALIAS","RSC_ACTION_ENCRYPTION_ALIAS","RSC_ACTION_PROXY_ALIAS","RSC_ACTION_VALIDATE_ALIAS","RSC_CACHE_WRAPPER_ALIAS","RSC_DYNAMIC_IMPORT_WRAPPER_ALIAS","RSC_MOD_REF_PROXY_ALIAS","RSC_PREFETCH_SUFFIX","RSC_SEGMENTS_DIR_SUFFIX","RSC_SEGMENT_SUFFIX","RSC_SUFFIX","SERVER_PROPS_EXPORT_ERROR","SERVER_PROPS_GET_INIT_PROPS_CONFLICT","SERVER_PROPS_SSG_CONFLICT","SERVER_RUNTIME","SSG_FALLBACK_EXPORT_ERROR","SSG_GET_INITIAL_PROPS_CONFLICT","STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR","UNSTABLE_REVALIDATE_RENAME_ERROR","WEBPACK_LAYERS","WEBPACK_RESOURCE_QUERIES","edge","experimentalEdge","nodejs","WEBPACK_LAYERS_NAMES","shared","reactServerComponents","serverSideRendering","actionBrowser","apiNode","apiEdge","middleware","instrument","edgeAsset","appPagesBrowser","pagesDirBrowser","pagesDirEdge","pagesDirNode","GROUP","builtinReact","serverOnly","neutralTarget","clientOnly","bundled","appPages","edgeSSREntry","metadata","metadataRoute","metadataImageMeta","escapeStringRegexp","reHasRegExp","reReplaceRegExp","str","getNamedMiddlewareRegex","getNamedRouteRegex","getRouteRegex","parseParameter","PARAMETER_PATTERN","parseMatchedParameter","optional","getParametrizedRoute","includeSuffix","includePrefix","groupIndex","markerMatch","paramMatches","s","parameterizedRoute","normalizedRoute","excludeOptionalTrailingSlash","RegExp","buildGetSafeRouteKey","routeKey","j","fromCharCode","Math","floor","getSafeKeyFromSegment","interceptionMarker","getSafeRouteKey","routeKeys","keyPrefix","backreferenceDuplicateKeys","cleanedKey","invalidKey","parseInt","duplicateKey","interceptionPrefix","pattern","getNamedParametrizedRoute","prefixRouteKeys","hasInterceptionMarker","some","namedParameterizedRoute","options","namedRegex","catchAll","catchAllRegex","catchAllGroupedRegex","interpolateAs","asPathname","interpolatedRoute","dynamicRegex","dynamicGroups","dynamicMatches","replaced","resolveHref","router","resolveAs","base","urlAsString","urlProtoMatch","urlAsStringNoProto","normalizedUrl","asPath","finalUrl","interpolatedAs","resolvedHref","addPathPrefix","addLocale","locale","defaultLocale","ignorePrefix","lower","toLowerCase","__NEXT_I18N_SUPPORT","require","RouterContext","React","createContext","cancelIdleCallback","requestIdleCallback","self","bind","cb","start","Date","now","setTimeout","didTimeout","timeRemaining","max","id","clearTimeout","useIntersection","hasIntersectionObserver","IntersectionObserver","observers","idList","createObserver","margin","rootMargin","obj","instance","elements","observer","callback","isVisible","isIntersecting","intersectionRatio","observe","element","unobserve","size","disconnect","findIndex","rootRef","disabled","isDisabled","visible","setVisible","useState","elementRef","useRef","setElement","useCallback","current","useEffect","tagName","idleCallback","resetVisible","normalizeLocalePath","cache","WeakMap","locales","lowercasedLocales","detectedLocale","detectDomainLocale","domainItems","domainHostname","domain","getDomainLocale","domainLocales","proto","http","finalLocale","addBasePath","required","__NEXT_MANUAL_CLIENT_BASE_PATH","useMergedRef","refA","refB","cleanupA","cleanupB","cleanupFnA","cleanupFnB","applyRef","cleanup","errorOnce","errors","Set","msg","add","useLinkStatus","prefetched","prefetch","as","bypassPrefetchedCheck","prefetchedKey","catch","err","isModifiedEvent","event","eventTarget","currentTarget","getAttribute","metaKey","ctrlKey","shiftKey","altKey","nativeEvent","which","linkClicked","e","shallow","scroll","onNavigate","nodeName","isAnchorNodeName","toUpperCase","hasAttribute","preventDefault","navigate","isDefaultPrevented","routerScroll","formatStringOrUrl","urlObjOrString","Link","forwardRef","LinkComponent","forwardedRef","hrefProp","asProp","childrenProp","prefetchProp","passHref","onClick","onMouseEnter","onMouseEnterProp","onTouchStart","onTouchStartProp","legacyBehavior","restProps","a","useContext","prefetchEnabled","createPropError","expected","actual","requiredPropsGuard","requiredProps","optionalPropsGuard","optionalProps","valType","useMemo","resolvedAs","previousHref","previousAs","child","Children","only","type","childRef","ref","setIntersectionRef","setIntersectionWithResetRef","el","setRef","childProps","defaultPrevented","priority","__NEXT_LINK_NO_TOUCH_START","curLocale","localeDomain","isLocaleDomain","cloneElement","LinkStatusContext","pending","require_link","jsx","jsxs","default","icons","Button","Button_default","useId","Checkbox_default","Input","Input_default","Radio_default","Fragment"],"mappings":"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","file":"index.cjs","sourcesContent":["\"use strict\";\n\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) return obj;\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") return { default: obj };\n\n    var cache = _getRequireWildcardCache(nodeInterop);\n\n    if (cache && cache.has(obj)) return cache.get(obj);\n\n    var newObj = { __proto__: null };\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);\n            else newObj[key] = obj[key];\n        }\n    }\n\n    newObj.default = obj;\n\n    if (cache) cache.set(obj, newObj);\n\n    return newObj;\n}\nexports._ = _interop_require_wildcard;\n","import type { ParsedUrlQuery } from 'querystring'\n\nexport function searchParamsToUrlQuery(\n  searchParams: URLSearchParams\n): ParsedUrlQuery {\n  const query: ParsedUrlQuery = {}\n  for (const [key, value] of searchParams.entries()) {\n    const existing = query[key]\n    if (typeof existing === 'undefined') {\n      query[key] = value\n    } else if (Array.isArray(existing)) {\n      existing.push(value)\n    } else {\n      query[key] = [existing, value]\n    }\n  }\n  return query\n}\n\nfunction stringifyUrlQueryParam(param: unknown): string {\n  if (typeof param === 'string') {\n    return param\n  }\n\n  if (\n    (typeof param === 'number' && !isNaN(param)) ||\n    typeof param === 'boolean'\n  ) {\n    return String(param)\n  } else {\n    return ''\n  }\n}\n\nexport function urlQueryToSearchParams(query: ParsedUrlQuery): URLSearchParams {\n  const searchParams = new URLSearchParams()\n  for (const [key, value] of Object.entries(query)) {\n    if (Array.isArray(value)) {\n      for (const item of value) {\n        searchParams.append(key, stringifyUrlQueryParam(item))\n      }\n    } else {\n      searchParams.set(key, stringifyUrlQueryParam(value))\n    }\n  }\n  return searchParams\n}\n\nexport function assign(\n  target: URLSearchParams,\n  ...searchParamsList: URLSearchParams[]\n): URLSearchParams {\n  for (const searchParams of searchParamsList) {\n    for (const key of searchParams.keys()) {\n      target.delete(key)\n    }\n\n    for (const [key, value] of searchParams.entries()) {\n      target.append(key, value)\n    }\n  }\n\n  return target\n}\n","// Format function modified from nodejs\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { UrlObject } from 'url'\nimport type { ParsedUrlQuery } from 'querystring'\nimport * as querystring from './querystring'\n\nconst slashedProtocols = /https?|ftp|gopher|file/\n\nexport function formatUrl(urlObj: UrlObject) {\n  let { auth, hostname } = urlObj\n  let protocol = urlObj.protocol || ''\n  let pathname = urlObj.pathname || ''\n  let hash = urlObj.hash || ''\n  let query = urlObj.query || ''\n  let host: string | false = false\n\n  auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : ''\n\n  if (urlObj.host) {\n    host = auth + urlObj.host\n  } else if (hostname) {\n    host = auth + (~hostname.indexOf(':') ? `[${hostname}]` : hostname)\n    if (urlObj.port) {\n      host += ':' + urlObj.port\n    }\n  }\n\n  if (query && typeof query === 'object') {\n    query = String(querystring.urlQueryToSearchParams(query as ParsedUrlQuery))\n  }\n\n  let search = urlObj.search || (query && `?${query}`) || ''\n\n  if (protocol && !protocol.endsWith(':')) protocol += ':'\n\n  if (\n    urlObj.slashes ||\n    ((!protocol || slashedProtocols.test(protocol)) && host !== false)\n  ) {\n    host = '//' + (host || '')\n    if (pathname && pathname[0] !== '/') pathname = '/' + pathname\n  } else if (!host) {\n    host = ''\n  }\n\n  if (hash && hash[0] !== '#') hash = '#' + hash\n  if (search && search[0] !== '?') search = '?' + search\n\n  pathname = pathname.replace(/[?#]/g, encodeURIComponent)\n  search = search.replace('#', '%23')\n\n  return `${protocol}${host}${pathname}${search}${hash}`\n}\n\nexport const urlObjectKeys = [\n  'auth',\n  'hash',\n  'host',\n  'hostname',\n  'href',\n  'path',\n  'pathname',\n  'port',\n  'protocol',\n  'query',\n  'search',\n  'slashes',\n]\n\nexport function formatWithValidation(url: UrlObject): string {\n  if (process.env.NODE_ENV === 'development') {\n    if (url !== null && typeof url === 'object') {\n      Object.keys(url).forEach((key) => {\n        if (!urlObjectKeys.includes(key)) {\n          console.warn(\n            `Unknown key passed via urlObject into url.format: ${key}`\n          )\n        }\n      })\n    }\n  }\n\n  return formatUrl(url)\n}\n","export function omit<T extends { [key: string]: unknown }, K extends keyof T>(\n  object: T,\n  keys: K[]\n): Omit<T, K> {\n  const omitted: { [key: string]: unknown } = {}\n  Object.keys(object).forEach((key) => {\n    if (!keys.includes(key as K)) {\n      omitted[key] = object[key]\n    }\n  })\n  return omitted as Omit<T, K>\n}\n","import type { HtmlProps } from './html-context.shared-runtime'\nimport type { ComponentType, JSX } from 'react'\nimport type { DomainLocale } from '../../server/config'\nimport type { Env } from '@next/env'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { NextRouter } from './router/router'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { PreviewData } from '../../types'\nimport type { COMPILER_NAMES } from './constants'\nimport type fs from 'fs'\n\nexport type NextComponentType<\n  Context extends BaseContext = NextPageContext,\n  InitialProps = {},\n  Props = {},\n> = ComponentType<Props> & {\n  /**\n   * Used for initial page load data population. Data returned from `getInitialProps` is serialized when server rendered.\n   * Make sure to return plain `Object` without using `Date`, `Map`, `Set`.\n   * @param context Context of `page`\n   */\n  getInitialProps?(context: Context): InitialProps | Promise<InitialProps>\n}\n\nexport type DocumentType = NextComponentType<\n  DocumentContext,\n  DocumentInitialProps,\n  DocumentProps\n>\n\nexport type AppType<P = {}> = NextComponentType<\n  AppContextType,\n  P,\n  AppPropsType<any, P>\n>\n\nexport type AppTreeType = ComponentType<\n  AppInitialProps & { [name: string]: any }\n>\n\n/**\n * Web vitals provided to _app.reportWebVitals by Core Web Vitals plugin developed by Google Chrome team.\n * https://nextjs.org/blog/next-9-4#integrated-web-vitals-reporting\n */\nexport const WEB_VITALS = ['CLS', 'FCP', 'FID', 'INP', 'LCP', 'TTFB'] as const\nexport type NextWebVitalsMetric = {\n  id: string\n  startTime: number\n  value: number\n  attribution?: { [key: string]: unknown }\n} & (\n  | {\n      label: 'web-vital'\n      name: (typeof WEB_VITALS)[number]\n    }\n  | {\n      label: 'custom'\n      name:\n        | 'Next.js-hydration'\n        | 'Next.js-route-change-to-render'\n        | 'Next.js-render'\n    }\n)\n\nexport type Enhancer<C> = (Component: C) => C\n\nexport type ComponentsEnhancer =\n  | {\n      enhanceApp?: Enhancer<AppType>\n      enhanceComponent?: Enhancer<NextComponentType>\n    }\n  | Enhancer<NextComponentType>\n\nexport type RenderPageResult = {\n  html: string\n  head?: Array<JSX.Element | null>\n}\n\nexport type RenderPage = (\n  options?: ComponentsEnhancer\n) => DocumentInitialProps | Promise<DocumentInitialProps>\n\nexport type BaseContext = {\n  res?: ServerResponse\n  [k: string]: any\n}\n\nexport type NEXT_DATA = {\n  props: Record<string, any>\n  page: string\n  query: ParsedUrlQuery\n  buildId: string\n  assetPrefix?: string\n  runtimeConfig?: { [key: string]: any }\n  nextExport?: boolean\n  autoExport?: boolean\n  isFallback?: boolean\n  isExperimentalCompile?: boolean\n  dynamicIds?: (string | number)[]\n  err?: Error & {\n    statusCode?: number\n    source?: typeof COMPILER_NAMES.server | typeof COMPILER_NAMES.edgeServer\n  }\n  gsp?: boolean\n  gssp?: boolean\n  customServer?: boolean\n  gip?: boolean\n  appGip?: boolean\n  locale?: string\n  locales?: readonly string[]\n  defaultLocale?: string\n  domainLocales?: readonly DomainLocale[]\n  scriptLoader?: any[]\n  isPreview?: boolean\n  notFoundSrcPage?: string\n}\n\n/**\n * `Next` context\n */\nexport interface NextPageContext {\n  /**\n   * Error object if encountered during rendering\n   */\n  err?: (Error & { statusCode?: number }) | null\n  /**\n   * `HTTP` request object.\n   */\n  req?: IncomingMessage\n  /**\n   * `HTTP` response object.\n   */\n  res?: ServerResponse\n  /**\n   * Path section of `URL`.\n   */\n  pathname: string\n  /**\n   * Query string section of `URL` parsed as an object.\n   */\n  query: ParsedUrlQuery\n  /**\n   * `String` of the actual path including query.\n   */\n  asPath?: string\n  /**\n   * The currently active locale\n   */\n  locale?: string\n  /**\n   * All configured locales\n   */\n  locales?: readonly string[]\n  /**\n   * The configured default locale\n   */\n  defaultLocale?: string\n  /**\n   * `Component` the tree of the App to use if needing to render separately\n   */\n  AppTree: AppTreeType\n}\n\nexport type AppContextType<Router extends NextRouter = NextRouter> = {\n  Component: NextComponentType<NextPageContext>\n  AppTree: AppTreeType\n  ctx: NextPageContext\n  router: Router\n}\n\nexport type AppInitialProps<PageProps = any> = {\n  pageProps: PageProps\n}\n\nexport type AppPropsType<\n  Router extends NextRouter = NextRouter,\n  PageProps = {},\n> = AppInitialProps<PageProps> & {\n  Component: NextComponentType<NextPageContext, any, any>\n  router: Router\n  __N_SSG?: boolean\n  __N_SSP?: boolean\n}\n\nexport type DocumentContext = NextPageContext & {\n  renderPage: RenderPage\n  defaultGetInitialProps(\n    ctx: DocumentContext,\n    options?: { nonce?: string }\n  ): Promise<DocumentInitialProps>\n}\n\nexport type DocumentInitialProps = RenderPageResult & {\n  styles?: React.ReactElement[] | Iterable<React.ReactNode> | JSX.Element\n}\n\nexport type DocumentProps = DocumentInitialProps & HtmlProps\n\n/**\n * Next `API` route request\n */\nexport interface NextApiRequest extends IncomingMessage {\n  /**\n   * Object of `query` values from url\n   */\n  query: Partial<{\n    [key: string]: string | string[]\n  }>\n  /**\n   * Object of `cookies` from header\n   */\n  cookies: Partial<{\n    [key: string]: string\n  }>\n\n  body: any\n\n  env: Env\n\n  draftMode?: boolean\n\n  preview?: boolean\n  /**\n   * Preview data set on the request, if any\n   * */\n  previewData?: PreviewData\n}\n\n/**\n * Send body of response\n */\ntype Send<T> = (body: T) => void\n\n/**\n * Next `API` route response\n */\nexport type NextApiResponse<Data = any> = ServerResponse & {\n  /**\n   * Send data `any` data in response\n   */\n  send: Send<Data>\n  /**\n   * Send data `json` data in response\n   */\n  json: Send<Data>\n  status: (statusCode: number) => NextApiResponse<Data>\n  redirect(url: string): NextApiResponse<Data>\n  redirect(status: number, url: string): NextApiResponse<Data>\n\n  /**\n   * Set draft mode\n   */\n  setDraftMode: (options: { enable: boolean }) => NextApiResponse<Data>\n\n  /**\n   * Set preview data for Next.js' prerender mode\n   */\n  setPreviewData: (\n    data: object | string,\n    options?: {\n      /**\n       * Specifies the number (in seconds) for the preview session to last for.\n       * The given number will be converted to an integer by rounding down.\n       * By default, no maximum age is set and the preview session finishes\n       * when the client shuts down (browser is closed).\n       */\n      maxAge?: number\n      /**\n       * Specifies the path for the preview session to work under. By default,\n       * the path is considered the \"default path\", i.e., any pages under \"/\".\n       */\n      path?: string\n    }\n  ) => NextApiResponse<Data>\n\n  /**\n   * Clear preview data for Next.js' prerender mode\n   */\n  clearPreviewData: (options?: { path?: string }) => NextApiResponse<Data>\n\n  /**\n   * Revalidate a specific page and regenerate it using On-Demand Incremental\n   * Static Regeneration.\n   * The path should be an actual path, not a rewritten path. E.g. for\n   * \"/blog/[slug]\" this should be \"/blog/post-1\".\n   * @link https://nextjs.org/docs/app/building-your-application/data-fetching/incremental-static-regeneration#on-demand-revalidation-with-revalidatepath\n   */\n  revalidate: (\n    urlPath: string,\n    opts?: {\n      unstable_onlyGenerated?: boolean\n    }\n  ) => Promise<void>\n}\n\n/**\n * Next `API` route handler\n */\nexport type NextApiHandler<T = any> = (\n  req: NextApiRequest,\n  res: NextApiResponse<T>\n) => unknown | Promise<unknown>\n\n/**\n * Utils\n */\nexport function execOnce<T extends (...args: any[]) => ReturnType<T>>(\n  fn: T\n): T {\n  let used = false\n  let result: ReturnType<T>\n\n  return ((...args: any[]) => {\n    if (!used) {\n      used = true\n      result = fn(...args)\n    }\n    return result\n  }) as T\n}\n\n// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/\nexport const isAbsoluteUrl = (url: string) => ABSOLUTE_URL_REGEX.test(url)\n\nexport function getLocationOrigin() {\n  const { protocol, hostname, port } = window.location\n  return `${protocol}//${hostname}${port ? ':' + port : ''}`\n}\n\nexport function getURL() {\n  const { href } = window.location\n  const origin = getLocationOrigin()\n  return href.substring(origin.length)\n}\n\nexport function getDisplayName<P>(Component: ComponentType<P>) {\n  return typeof Component === 'string'\n    ? Component\n    : Component.displayName || Component.name || 'Unknown'\n}\n\nexport function isResSent(res: ServerResponse) {\n  return res.finished || res.headersSent\n}\n\nexport function normalizeRepeatedSlashes(url: string) {\n  const urlParts = url.split('?')\n  const urlNoQuery = urlParts[0]\n\n  return (\n    urlNoQuery\n      // first we replace any non-encoded backslashes with forward\n      // then normalize repeated forward slashes\n      .replace(/\\\\/g, '/')\n      .replace(/\\/\\/+/g, '/') +\n    (urlParts[1] ? `?${urlParts.slice(1).join('?')}` : '')\n  )\n}\n\nexport async function loadGetInitialProps<\n  C extends BaseContext,\n  IP = {},\n  P = {},\n>(App: NextComponentType<C, IP, P>, ctx: C): Promise<IP> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (App.prototype?.getInitialProps) {\n      const message = `\"${getDisplayName(\n        App\n      )}.getInitialProps()\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.`\n      throw new Error(message)\n    }\n  }\n  // when called from _app `ctx` is nested in `ctx`\n  const res = ctx.res || (ctx.ctx && ctx.ctx.res)\n\n  if (!App.getInitialProps) {\n    if (ctx.ctx && ctx.Component) {\n      // @ts-ignore pageProps default\n      return {\n        pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx),\n      }\n    }\n    return {} as IP\n  }\n\n  const props = await App.getInitialProps(ctx)\n\n  if (res && isResSent(res)) {\n    return props\n  }\n\n  if (!props) {\n    const message = `\"${getDisplayName(\n      App\n    )}.getInitialProps()\" should resolve to an object. But found \"${props}\" instead.`\n    throw new Error(message)\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.keys(props).length === 0 && !ctx.ctx) {\n      console.warn(\n        `${getDisplayName(\n          App\n        )} returned an empty object from \\`getInitialProps\\`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps`\n      )\n    }\n  }\n\n  return props\n}\n\nexport const SP = typeof performance !== 'undefined'\nexport const ST =\n  SP &&\n  (['mark', 'measure', 'getEntriesByName'] as const).every(\n    (method) => typeof performance[method] === 'function'\n  )\n\nexport class DecodeError extends Error {}\nexport class NormalizeError extends Error {}\nexport class PageNotFoundError extends Error {\n  code: string\n\n  constructor(page: string) {\n    super()\n    this.code = 'ENOENT'\n    this.name = 'PageNotFoundError'\n    this.message = `Cannot find module for page: ${page}`\n  }\n}\n\nexport class MissingStaticPage extends Error {\n  constructor(page: string, message: string) {\n    super()\n    this.message = `Failed to load static file for page: ${page} ${message}`\n  }\n}\n\nexport class MiddlewareNotFoundError extends Error {\n  code: string\n  constructor() {\n    super()\n    this.code = 'ENOENT'\n    this.message = `Cannot find the middleware module`\n  }\n}\n\nexport interface CacheFs {\n  existsSync: typeof fs.existsSync\n  readFile: typeof fs.promises.readFile\n  readFileSync: typeof fs.readFileSync\n  writeFile(f: string, d: any): Promise<void>\n  mkdir(dir: string): Promise<void | string>\n  stat(f: string): Promise<{ mtime: Date }>\n}\n\nexport function stringifyError(error: Error) {\n  return JSON.stringify({ message: error.message, stack: error.stack })\n}\n","/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */\nexport function removeTrailingSlash(route: string) {\n  return route.replace(/\\/$/, '') || '/'\n}\n","/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */\nexport function parsePath(path: string) {\n  const hashIndex = path.indexOf('#')\n  const queryIndex = path.indexOf('?')\n  const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex)\n\n  if (hasQuery || hashIndex > -1) {\n    return {\n      pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n      query: hasQuery\n        ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined)\n        : '',\n      hash: hashIndex > -1 ? path.slice(hashIndex) : '',\n    }\n  }\n\n  return { pathname: path, query: '', hash: '' }\n}\n","import { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash'\nimport { parsePath } from '../shared/lib/router/utils/parse-path'\n\n/**\n * Normalizes the trailing slash of a path according to the `trailingSlash` option\n * in `next.config.js`.\n */\nexport const normalizePathTrailingSlash = (path: string) => {\n  if (!path.startsWith('/') || process.env.__NEXT_MANUAL_TRAILING_SLASH) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  if (process.env.__NEXT_TRAILING_SLASH) {\n    if (/\\.[^/]+\\/?$/.test(pathname)) {\n      return `${removeTrailingSlash(pathname)}${query}${hash}`\n    } else if (pathname.endsWith('/')) {\n      return `${pathname}${query}${hash}`\n    } else {\n      return `${pathname}/${query}${hash}`\n    }\n  }\n\n  return `${removeTrailingSlash(pathname)}${query}${hash}`\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */\nexport function pathHasPrefix(path: string, prefix: string) {\n  if (typeof path !== 'string') {\n    return false\n  }\n\n  const { pathname } = parsePath(path)\n  return pathname === prefix || pathname.startsWith(prefix + '/')\n}\n","import { pathHasPrefix } from '../shared/lib/router/utils/path-has-prefix'\n\nconst basePath = (process.env.__NEXT_ROUTER_BASEPATH as string) || ''\n\nexport function hasBasePath(path: string): boolean {\n  return pathHasPrefix(path, basePath)\n}\n","import { isAbsoluteUrl, getLocationOrigin } from '../../utils'\nimport { hasBasePath } from '../../../../client/has-base-path'\n\n/**\n * Detects whether a given url is routable by the Next.js router (browser only).\n */\nexport function isLocalURL(url: string): boolean {\n  // prevent a hydration mismatch on href for url with anchor refs\n  if (!isAbsoluteUrl(url)) return true\n  try {\n    // absolute urls can be local if they are on the same origin\n    const locationOrigin = getLocationOrigin()\n    const resolved = new URL(url, locationOrigin)\n    return resolved.origin === locationOrigin && hasBasePath(resolved.pathname)\n  } catch (_) {\n    return false\n  }\n}\n","class UrlNode {\n  placeholder: boolean = true\n  children: Map<string, UrlNode> = new Map()\n  slugName: string | null = null\n  restSlugName: string | null = null\n  optionalRestSlugName: string | null = null\n\n  insert(urlPath: string): void {\n    this._insert(urlPath.split('/').filter(Boolean), [], false)\n  }\n\n  smoosh(): string[] {\n    return this._smoosh()\n  }\n\n  private _smoosh(prefix: string = '/'): string[] {\n    const childrenPaths = [...this.children.keys()].sort()\n    if (this.slugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[]'), 1)\n    }\n    if (this.restSlugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[...]'), 1)\n    }\n    if (this.optionalRestSlugName !== null) {\n      childrenPaths.splice(childrenPaths.indexOf('[[...]]'), 1)\n    }\n\n    const routes = childrenPaths\n      .map((c) => this.children.get(c)!._smoosh(`${prefix}${c}/`))\n      .reduce((prev, curr) => [...prev, ...curr], [])\n\n    if (this.slugName !== null) {\n      routes.push(\n        ...this.children.get('[]')!._smoosh(`${prefix}[${this.slugName}]/`)\n      )\n    }\n\n    if (!this.placeholder) {\n      const r = prefix === '/' ? '/' : prefix.slice(0, -1)\n      if (this.optionalRestSlugName != null) {\n        throw new Error(\n          `You cannot define a route with the same specificity as a optional catch-all route (\"${r}\" and \"${r}[[...${this.optionalRestSlugName}]]\").`\n        )\n      }\n\n      routes.unshift(r)\n    }\n\n    if (this.restSlugName !== null) {\n      routes.push(\n        ...this.children\n          .get('[...]')!\n          ._smoosh(`${prefix}[...${this.restSlugName}]/`)\n      )\n    }\n\n    if (this.optionalRestSlugName !== null) {\n      routes.push(\n        ...this.children\n          .get('[[...]]')!\n          ._smoosh(`${prefix}[[...${this.optionalRestSlugName}]]/`)\n      )\n    }\n\n    return routes\n  }\n\n  private _insert(\n    urlPaths: string[],\n    slugNames: string[],\n    isCatchAll: boolean\n  ): void {\n    if (urlPaths.length === 0) {\n      this.placeholder = false\n      return\n    }\n\n    if (isCatchAll) {\n      throw new Error(`Catch-all must be the last part of the URL.`)\n    }\n\n    // The next segment in the urlPaths list\n    let nextSegment = urlPaths[0]\n\n    // Check if the segment matches `[something]`\n    if (nextSegment.startsWith('[') && nextSegment.endsWith(']')) {\n      // Strip `[` and `]`, leaving only `something`\n      let segmentName = nextSegment.slice(1, -1)\n\n      let isOptional = false\n      if (segmentName.startsWith('[') && segmentName.endsWith(']')) {\n        // Strip optional `[` and `]`, leaving only `something`\n        segmentName = segmentName.slice(1, -1)\n        isOptional = true\n      }\n\n      if (segmentName.startsWith('…')) {\n        throw new Error(\n          `Detected a three-dot character ('…') at ('${segmentName}'). Did you mean ('...')?`\n        )\n      }\n\n      if (segmentName.startsWith('...')) {\n        // Strip `...`, leaving only `something`\n        segmentName = segmentName.substring(3)\n        isCatchAll = true\n      }\n\n      if (segmentName.startsWith('[') || segmentName.endsWith(']')) {\n        throw new Error(\n          `Segment names may not start or end with extra brackets ('${segmentName}').`\n        )\n      }\n\n      if (segmentName.startsWith('.')) {\n        throw new Error(\n          `Segment names may not start with erroneous periods ('${segmentName}').`\n        )\n      }\n\n      function handleSlug(previousSlug: string | null, nextSlug: string) {\n        if (previousSlug !== null) {\n          // If the specific segment already has a slug but the slug is not `something`\n          // This prevents collisions like:\n          // pages/[post]/index.js\n          // pages/[id]/index.js\n          // Because currently multiple dynamic params on the same segment level are not supported\n          if (previousSlug !== nextSlug) {\n            // TODO: This error seems to be confusing for users, needs an error link, the description can be based on above comment.\n            throw new Error(\n              `You cannot use different slug names for the same dynamic path ('${previousSlug}' !== '${nextSlug}').`\n            )\n          }\n        }\n\n        slugNames.forEach((slug) => {\n          if (slug === nextSlug) {\n            throw new Error(\n              `You cannot have the same slug name \"${nextSlug}\" repeat within a single dynamic path`\n            )\n          }\n\n          if (slug.replace(/\\W/g, '') === nextSegment.replace(/\\W/g, '')) {\n            throw new Error(\n              `You cannot have the slug names \"${slug}\" and \"${nextSlug}\" differ only by non-word symbols within a single dynamic path`\n            )\n          }\n        })\n\n        slugNames.push(nextSlug)\n      }\n\n      if (isCatchAll) {\n        if (isOptional) {\n          if (this.restSlugName != null) {\n            throw new Error(\n              `You cannot use both an required and optional catch-all route at the same level (\"[...${this.restSlugName}]\" and \"${urlPaths[0]}\" ).`\n            )\n          }\n\n          handleSlug(this.optionalRestSlugName, segmentName)\n          // slugName is kept as it can only be one particular slugName\n          this.optionalRestSlugName = segmentName\n          // nextSegment is overwritten to [[...]] so that it can later be sorted specifically\n          nextSegment = '[[...]]'\n        } else {\n          if (this.optionalRestSlugName != null) {\n            throw new Error(\n              `You cannot use both an optional and required catch-all route at the same level (\"[[...${this.optionalRestSlugName}]]\" and \"${urlPaths[0]}\").`\n            )\n          }\n\n          handleSlug(this.restSlugName, segmentName)\n          // slugName is kept as it can only be one particular slugName\n          this.restSlugName = segmentName\n          // nextSegment is overwritten to [...] so that it can later be sorted specifically\n          nextSegment = '[...]'\n        }\n      } else {\n        if (isOptional) {\n          throw new Error(\n            `Optional route parameters are not yet supported (\"${urlPaths[0]}\").`\n          )\n        }\n        handleSlug(this.slugName, segmentName)\n        // slugName is kept as it can only be one particular slugName\n        this.slugName = segmentName\n        // nextSegment is overwritten to [] so that it can later be sorted specifically\n        nextSegment = '[]'\n      }\n    }\n\n    // If this UrlNode doesn't have the nextSegment yet we create a new child UrlNode\n    if (!this.children.has(nextSegment)) {\n      this.children.set(nextSegment, new UrlNode())\n    }\n\n    this.children\n      .get(nextSegment)!\n      ._insert(urlPaths.slice(1), slugNames, isCatchAll)\n  }\n}\n\nexport function getSortedRoutes(\n  normalizedPages: ReadonlyArray<string>\n): string[] {\n  // First the UrlNode is created, and every UrlNode can have only 1 dynamic segment\n  // Eg you can't have pages/[post]/abc.js and pages/[hello]/something-else.js\n  // Only 1 dynamic segment per nesting level\n\n  // So in the case that is test/integration/dynamic-routing it'll be this:\n  // pages/[post]/comments.js\n  // pages/blog/[post]/comment/[id].js\n  // Both are fine because `pages/[post]` and `pages/blog` are on the same level\n  // So in this case `UrlNode` created here has `this.slugName === 'post'`\n  // And since your PR passed through `slugName` as an array basically it'd including it in too many possibilities\n  // Instead what has to be passed through is the upwards path's dynamic names\n  const root = new UrlNode()\n\n  // Here the `root` gets injected multiple paths, and insert will break them up into sublevels\n  normalizedPages.forEach((pagePath) => root.insert(pagePath))\n  // Smoosh will then sort those sublevels up to the point where you get the correct route definition priority\n  return root.smoosh()\n}\n\nexport function getSortedRouteObjects<T>(\n  objects: T[],\n  getter: (obj: T) => string\n): T[] {\n  // We're assuming here that all the pathnames are unique, that way we can\n  // sort the list and use the index as the key.\n  const indexes: Record<string, number> = {}\n  const pathnames: string[] = []\n  for (let i = 0; i < objects.length; i++) {\n    const pathname = getter(objects[i])\n    indexes[pathname] = i\n    pathnames[i] = pathname\n  }\n\n  // Sort the pathnames.\n  const sorted = getSortedRoutes(pathnames)\n\n  // Map the sorted pathnames back to the original objects using the new sorted\n  // index.\n  return sorted.map((pathname) => objects[indexes[pathname]])\n}\n","/**\n * For a given page path, this function ensures that there is a leading slash.\n * If there is not a leading slash, one is added, otherwise it is noop.\n */\nexport function ensureLeadingSlash(path: string) {\n  return path.startsWith('/') ? path : `/${path}`\n}\n","import type { Segment } from '../../server/app-render/types'\n\nexport function isGroupSegment(segment: string) {\n  // Use array[0] for performant purpose\n  return segment[0] === '(' && segment.endsWith(')')\n}\n\nexport function isParallelRouteSegment(segment: string) {\n  return segment.startsWith('@') && segment !== '@children'\n}\n\nexport function addSearchParamsIfPageSegment(\n  segment: Segment,\n  searchParams: Record<string, string | string[] | undefined>\n) {\n  const isPageSegment = segment.includes(PAGE_SEGMENT_KEY)\n\n  if (isPageSegment) {\n    const stringifiedQuery = JSON.stringify(searchParams)\n    return stringifiedQuery !== '{}'\n      ? PAGE_SEGMENT_KEY + '?' + stringifiedQuery\n      : PAGE_SEGMENT_KEY\n  }\n\n  return segment\n}\n\nexport const PAGE_SEGMENT_KEY = '__PAGE__'\nexport const DEFAULT_SEGMENT_KEY = '__DEFAULT__'\n","import { ensureLeadingSlash } from '../../page-path/ensure-leading-slash'\nimport { isGroupSegment } from '../../segment'\n\n/**\n * Normalizes an app route so it represents the actual request path. Essentially\n * performing the following transformations:\n *\n * - `/(dashboard)/user/[id]/page` to `/user/[id]`\n * - `/(dashboard)/account/page` to `/account`\n * - `/user/[id]/page` to `/user/[id]`\n * - `/account/page` to `/account`\n * - `/page` to `/`\n * - `/(dashboard)/user/[id]/route` to `/user/[id]`\n * - `/(dashboard)/account/route` to `/account`\n * - `/user/[id]/route` to `/user/[id]`\n * - `/account/route` to `/account`\n * - `/route` to `/`\n * - `/` to `/`\n *\n * @param route the app route to normalize\n * @returns the normalized pathname\n */\nexport function normalizeAppPath(route: string) {\n  return ensureLeadingSlash(\n    route.split('/').reduce((pathname, segment, index, segments) => {\n      // Empty segments are ignored.\n      if (!segment) {\n        return pathname\n      }\n\n      // Groups are ignored.\n      if (isGroupSegment(segment)) {\n        return pathname\n      }\n\n      // Parallel segments are ignored.\n      if (segment[0] === '@') {\n        return pathname\n      }\n\n      // The last segment (if it's a leaf) should be ignored.\n      if (\n        (segment === 'page' || segment === 'route') &&\n        index === segments.length - 1\n      ) {\n        return pathname\n      }\n\n      return `${pathname}/${segment}`\n    }, '')\n  )\n}\n\n/**\n * Strips the `.rsc` extension if it's in the pathname.\n * Since this function is used on full urls it checks `?` for searchParams handling.\n */\nexport function normalizeRscURL(url: string) {\n  return url.replace(\n    /\\.rsc($|\\?)/,\n    // $1 ensures `?` is preserved\n    '$1'\n  )\n}\n","import { normalizeAppPath } from './app-paths'\n\n// order matters here, the first match will be used\nexport const INTERCEPTION_ROUTE_MARKERS = [\n  '(..)(..)',\n  '(.)',\n  '(..)',\n  '(...)',\n] as const\n\nexport function isInterceptionRouteAppPath(path: string): boolean {\n  // TODO-APP: add more serious validation\n  return (\n    path\n      .split('/')\n      .find((segment) =>\n        INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n      ) !== undefined\n  )\n}\n\nexport function extractInterceptionRouteInformation(path: string) {\n  let interceptingRoute: string | undefined,\n    marker: (typeof INTERCEPTION_ROUTE_MARKERS)[number] | undefined,\n    interceptedRoute: string | undefined\n\n  for (const segment of path.split('/')) {\n    marker = INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n    if (marker) {\n      ;[interceptingRoute, interceptedRoute] = path.split(marker, 2)\n      break\n    }\n  }\n\n  if (!interceptingRoute || !marker || !interceptedRoute) {\n    throw new Error(\n      `Invalid interception route: ${path}. Must be in the format /<intercepting route>/(..|...|..)(..)/<intercepted route>`\n    )\n  }\n\n  interceptingRoute = normalizeAppPath(interceptingRoute) // normalize the path, e.g. /(blog)/feed -> /feed\n\n  switch (marker) {\n    case '(.)':\n      // (.) indicates that we should match with sibling routes, so we just need to append the intercepted route to the intercepting route\n      if (interceptingRoute === '/') {\n        interceptedRoute = `/${interceptedRoute}`\n      } else {\n        interceptedRoute = interceptingRoute + '/' + interceptedRoute\n      }\n      break\n    case '(..)':\n      // (..) indicates that we should match at one level up, so we need to remove the last segment of the intercepting route\n      if (interceptingRoute === '/') {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..) marker at the root level, use (.) instead.`\n        )\n      }\n      interceptedRoute = interceptingRoute\n        .split('/')\n        .slice(0, -1)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    case '(...)':\n      // (...) will match the route segment in the root directory, so we need to use the root directory to prepend the intercepted route\n      interceptedRoute = '/' + interceptedRoute\n      break\n    case '(..)(..)':\n      // (..)(..) indicates that we should match at two levels up, so we need to remove the last two segments of the intercepting route\n\n      const splitInterceptingRoute = interceptingRoute.split('/')\n      if (splitInterceptingRoute.length <= 2) {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..)(..) marker at the root level or one level up.`\n        )\n      }\n\n      interceptedRoute = splitInterceptingRoute\n        .slice(0, -2)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    default:\n      throw new Error('Invariant: unexpected marker')\n  }\n\n  return { interceptingRoute, interceptedRoute }\n}\n","import {\n  extractInterceptionRouteInformation,\n  isInterceptionRouteAppPath,\n} from './interception-routes'\n\n// Identify /.*[param].*/ in route string\nconst TEST_ROUTE = /\\/[^/]*\\[[^/]+\\][^/]*(?=\\/|$)/\n\n// Identify /[param]/ in route string\nconst TEST_STRICT_ROUTE = /\\/\\[[^/]+\\](?=\\/|$)/\n\n/**\n * Check if a route is dynamic.\n *\n * @param route - The route to check.\n * @param strict - Whether to use strict mode which prohibits segments with prefixes/suffixes (default: true).\n * @returns Whether the route is dynamic.\n */\nexport function isDynamicRoute(route: string, strict: boolean = true): boolean {\n  if (isInterceptionRouteAppPath(route)) {\n    route = extractInterceptionRouteInformation(route).interceptedRoute\n  }\n\n  if (strict) {\n    return TEST_STRICT_ROUTE.test(route)\n  }\n\n  return TEST_ROUTE.test(route)\n}\n","export { getSortedRoutes, getSortedRouteObjects } from './sorted-routes'\nexport { isDynamicRoute } from './is-dynamic'\n","import type { Group } from './route-regex'\nimport { DecodeError } from '../../utils'\nimport type { Params } from '../../../../server/request/params'\n\nexport interface RouteMatchFn {\n  (pathname: string): false | Params\n}\n\ntype RouteMatcherOptions = {\n  // We only use the exec method of the RegExp object. This helps us avoid using\n  // type assertions that the passed in properties are of the correct type.\n  re: Pick<RegExp, 'exec'>\n  groups: Record<string, Group>\n}\n\nexport function getRouteMatcher({\n  re,\n  groups,\n}: RouteMatcherOptions): RouteMatchFn {\n  return (pathname: string) => {\n    const routeMatch = re.exec(pathname)\n    if (!routeMatch) return false\n\n    const decode = (param: string) => {\n      try {\n        return decodeURIComponent(param)\n      } catch {\n        throw new DecodeError('failed to decode param')\n      }\n    }\n\n    const params: Params = {}\n    for (const [key, group] of Object.entries(groups)) {\n      const match = routeMatch[group.pos]\n      if (match !== undefined) {\n        if (group.repeat) {\n          params[key] = match.split('/').map((entry) => decode(entry))\n        } else {\n          params[key] = decode(match)\n        }\n      }\n    }\n\n    return params\n  }\n}\n","import type { ServerRuntime } from '../types'\n\nexport const NEXT_QUERY_PARAM_PREFIX = 'nxtP'\nexport const NEXT_INTERCEPTION_MARKER_PREFIX = 'nxtI'\n\nexport const MATCHED_PATH_HEADER = 'x-matched-path'\nexport const PRERENDER_REVALIDATE_HEADER = 'x-prerender-revalidate'\nexport const PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER =\n  'x-prerender-revalidate-if-generated'\n\nexport const RSC_PREFETCH_SUFFIX = '.prefetch.rsc'\nexport const RSC_SEGMENTS_DIR_SUFFIX = '.segments'\nexport const RSC_SEGMENT_SUFFIX = '.segment.rsc'\nexport const RSC_SUFFIX = '.rsc'\nexport const ACTION_SUFFIX = '.action'\nexport const NEXT_DATA_SUFFIX = '.json'\nexport const NEXT_META_SUFFIX = '.meta'\nexport const NEXT_BODY_SUFFIX = '.body'\n\nexport const NEXT_CACHE_TAGS_HEADER = 'x-next-cache-tags'\nexport const NEXT_CACHE_REVALIDATED_TAGS_HEADER = 'x-next-revalidated-tags'\nexport const NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER =\n  'x-next-revalidate-tag-token'\n\nexport const NEXT_RESUME_HEADER = 'next-resume'\n\n// if these change make sure we update the related\n// documentation as well\nexport const NEXT_CACHE_TAG_MAX_ITEMS = 128\nexport const NEXT_CACHE_TAG_MAX_LENGTH = 256\nexport const NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024\nexport const NEXT_CACHE_IMPLICIT_TAG_ID = '_N_T_'\n\n// in seconds\nexport const CACHE_ONE_YEAR = 31536000\n\n// in seconds, represents revalidate=false. I.e. never revaliate.\n// We use this value since it can be represented as a V8 SMI for optimal performance.\n// It can also be serialized as JSON if it ever leaks accidentally as an actual value.\nexport const INFINITE_CACHE = 0xfffffffe\n\n// Patterns to detect middleware files\nexport const MIDDLEWARE_FILENAME = 'middleware'\nexport const MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`\n\n// Pattern to detect instrumentation hooks file\nexport const INSTRUMENTATION_HOOK_FILENAME = 'instrumentation'\n\n// Because on Windows absolute paths in the generated code can break because of numbers, eg 1 in the path,\n// we have to use a private alias\nexport const PAGES_DIR_ALIAS = 'private-next-pages'\nexport const DOT_NEXT_ALIAS = 'private-dot-next'\nexport const ROOT_DIR_ALIAS = 'private-next-root-dir'\nexport const APP_DIR_ALIAS = 'private-next-app-dir'\nexport const RSC_MOD_REF_PROXY_ALIAS = 'private-next-rsc-mod-ref-proxy'\nexport const RSC_ACTION_VALIDATE_ALIAS = 'private-next-rsc-action-validate'\nexport const RSC_ACTION_PROXY_ALIAS = 'private-next-rsc-server-reference'\nexport const RSC_CACHE_WRAPPER_ALIAS = 'private-next-rsc-cache-wrapper'\nexport const RSC_DYNAMIC_IMPORT_WRAPPER_ALIAS =\n  'private-next-rsc-track-dynamic-import'\nexport const RSC_ACTION_ENCRYPTION_ALIAS = 'private-next-rsc-action-encryption'\nexport const RSC_ACTION_CLIENT_WRAPPER_ALIAS =\n  'private-next-rsc-action-client-wrapper'\n\nexport const PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`\n\nexport const SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`\n\nexport const SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`\n\nexport const SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`\n\nexport const STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`\n\nexport const SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`\n\nexport const GSP_NO_RETURNED_VALUE =\n  'Your `getStaticProps` function did not return an object. Did you forget to add a `return`?'\nexport const GSSP_NO_RETURNED_VALUE =\n  'Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?'\n\nexport const UNSTABLE_REVALIDATE_RENAME_ERROR =\n  'The `unstable_revalidate` property is available for general use.\\n' +\n  'Please use `revalidate` instead.'\n\nexport const GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`\n\nexport const NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`\n\nexport const SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`\n\nexport const ESLINT_DEFAULT_DIRS = ['app', 'pages', 'components', 'lib', 'src']\n\nexport const SERVER_RUNTIME: Record<string, ServerRuntime> = {\n  edge: 'edge',\n  experimentalEdge: 'experimental-edge',\n  nodejs: 'nodejs',\n}\n\n/**\n * The names of the webpack layers. These layers are the primitives for the\n * webpack chunks.\n */\nconst WEBPACK_LAYERS_NAMES = {\n  /**\n   * The layer for the shared code between the client and server bundles.\n   */\n  shared: 'shared',\n  /**\n   * The layer for server-only runtime and picking up `react-server` export conditions.\n   * Including app router RSC pages and app router custom routes and metadata routes.\n   */\n  reactServerComponents: 'rsc',\n  /**\n   * Server Side Rendering layer for app (ssr).\n   */\n  serverSideRendering: 'ssr',\n  /**\n   * The browser client bundle layer for actions.\n   */\n  actionBrowser: 'action-browser',\n  /**\n   * The Node.js bundle layer for the API routes.\n   */\n  apiNode: 'api-node',\n  /**\n   * The Edge Lite bundle layer for the API routes.\n   */\n  apiEdge: 'api-edge',\n  /**\n   * The layer for the middleware code.\n   */\n  middleware: 'middleware',\n  /**\n   * The layer for the instrumentation hooks.\n   */\n  instrument: 'instrument',\n  /**\n   * The layer for assets on the edge.\n   */\n  edgeAsset: 'edge-asset',\n  /**\n   * The browser client bundle layer for App directory.\n   */\n  appPagesBrowser: 'app-pages-browser',\n  /**\n   * The browser client bundle layer for Pages directory.\n   */\n  pagesDirBrowser: 'pages-dir-browser',\n  /**\n   * The Edge Lite bundle layer for Pages directory.\n   */\n  pagesDirEdge: 'pages-dir-edge',\n  /**\n   * The Node.js bundle layer for Pages directory.\n   */\n  pagesDirNode: 'pages-dir-node',\n} as const\n\nexport type WebpackLayerName =\n  (typeof WEBPACK_LAYERS_NAMES)[keyof typeof WEBPACK_LAYERS_NAMES]\n\nconst WEBPACK_LAYERS = {\n  ...WEBPACK_LAYERS_NAMES,\n  GROUP: {\n    builtinReact: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n    ],\n    serverOnly: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n      WEBPACK_LAYERS_NAMES.instrument,\n      WEBPACK_LAYERS_NAMES.middleware,\n    ],\n    neutralTarget: [\n      // pages api\n      WEBPACK_LAYERS_NAMES.apiNode,\n      WEBPACK_LAYERS_NAMES.apiEdge,\n    ],\n    clientOnly: [\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n    ],\n    bundled: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n      WEBPACK_LAYERS_NAMES.shared,\n      WEBPACK_LAYERS_NAMES.instrument,\n      WEBPACK_LAYERS_NAMES.middleware,\n    ],\n    appPages: [\n      // app router pages and layouts\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n    ],\n  },\n}\n\nconst WEBPACK_RESOURCE_QUERIES = {\n  edgeSSREntry: '__next_edge_ssr_entry__',\n  metadata: '__next_metadata__',\n  metadataRoute: '__next_metadata_route__',\n  metadataImageMeta: '__next_metadata_image_meta__',\n}\n\nexport { WEBPACK_LAYERS, WEBPACK_RESOURCE_QUERIES }\n","// regexp is based on https://github.com/sindresorhus/escape-string-regexp\nconst reHasRegExp = /[|\\\\{}()[\\]^$+*?.-]/\nconst reReplaceRegExp = /[|\\\\{}()[\\]^$+*?.-]/g\n\nexport function escapeStringRegexp(str: string) {\n  // see also: https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/escapeRegExp.js#L23\n  if (reHasRegExp.test(str)) {\n    return str.replace(reReplaceRegExp, '\\\\$&')\n  }\n  return str\n}\n","import {\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../../../../lib/constants'\nimport { INTERCEPTION_ROUTE_MARKERS } from './interception-routes'\nimport { escapeStringRegexp } from '../../escape-regexp'\nimport { removeTrailingSlash } from './remove-trailing-slash'\n\nexport interface Group {\n  pos: number\n  repeat: boolean\n  optional: boolean\n}\n\nexport interface RouteRegex {\n  groups: { [groupName: string]: Group }\n  re: RegExp\n}\n\ntype GetNamedRouteRegexOptions = {\n  /**\n   * Whether to prefix the route keys with the NEXT_INTERCEPTION_MARKER_PREFIX\n   * or NEXT_QUERY_PARAM_PREFIX. This is only relevant when creating the\n   * routes-manifest during the build.\n   */\n  prefixRouteKeys: boolean\n\n  /**\n   * Whether to include the suffix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `.json` part will be included\n   * in the regex, yielding `/(.*).json` as the regex.\n   */\n  includeSuffix?: boolean\n\n  /**\n   * Whether to include the prefix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `/` part will be included\n   * in the regex, yielding `^/(.*).json$` as the regex.\n   *\n   * Note that interception markers will already be included without the need\n   */\n  includePrefix?: boolean\n\n  /**\n   * Whether to exclude the optional trailing slash from the route regex.\n   */\n  excludeOptionalTrailingSlash?: boolean\n\n  /**\n   * Whether to backtrack duplicate keys. This is only relevant when creating\n   * the routes-manifest during the build.\n   */\n  backreferenceDuplicateKeys?: boolean\n}\n\ntype GetRouteRegexOptions = {\n  /**\n   * Whether to include extra parts in the route regex. This means that when you\n   * have something like `/[...slug].json` the `.json` part will be included\n   * in the regex, yielding `/(.*).json` as the regex.\n   */\n  includeSuffix?: boolean\n\n  /**\n   * Whether to include the prefix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `/` part will be included\n   * in the regex, yielding `^/(.*).json$` as the regex.\n   *\n   * Note that interception markers will already be included without the need\n   * of adding this option.\n   */\n  includePrefix?: boolean\n\n  /**\n   * Whether to exclude the optional trailing slash from the route regex.\n   */\n  excludeOptionalTrailingSlash?: boolean\n}\n\n/**\n * Regular expression pattern used to match route parameters.\n * Matches both single parameters and parameter groups.\n * Examples:\n *   - `[[...slug]]` matches parameter group with key 'slug', repeat: true, optional: true\n *   - `[...slug]` matches parameter group with key 'slug', repeat: true, optional: false\n *   - `[[foo]]` matches parameter with key 'foo', repeat: false, optional: true\n *   - `[bar]` matches parameter with key 'bar', repeat: false, optional: false\n */\nconst PARAMETER_PATTERN = /^([^[]*)\\[((?:\\[[^\\]]*\\])|[^\\]]+)\\](.*)$/\n\n/**\n * Parses a given parameter from a route to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[[...slug]]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[[foo]]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `[bar]` -> `{ key: 'bar', repeat: false, optional: false }`\n *   - `fizz` -> `{ key: 'fizz', repeat: false, optional: false }`\n * @param param - The parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nexport function parseParameter(param: string) {\n  const match = param.match(PARAMETER_PATTERN)\n\n  if (!match) {\n    return parseMatchedParameter(param)\n  }\n\n  return parseMatchedParameter(match[2])\n}\n\n/**\n * Parses a matched parameter from the PARAMETER_PATTERN regex to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `...slug` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[foo]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `bar` -> `{ key: 'bar', repeat: false, optional: false }`\n * @param param - The matched parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nfunction parseMatchedParameter(param: string) {\n  const optional = param.startsWith('[') && param.endsWith(']')\n  if (optional) {\n    param = param.slice(1, -1)\n  }\n  const repeat = param.startsWith('...')\n  if (repeat) {\n    param = param.slice(3)\n  }\n  return { key: param, repeat, optional }\n}\n\nfunction getParametrizedRoute(\n  route: string,\n  includeSuffix: boolean,\n  includePrefix: boolean\n) {\n  const groups: { [groupName: string]: Group } = {}\n  let groupIndex = 1\n\n  const segments: string[] = []\n  for (const segment of removeTrailingSlash(route).slice(1).split('/')) {\n    const markerMatch = INTERCEPTION_ROUTE_MARKERS.find((m) =>\n      segment.startsWith(m)\n    )\n    const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters\n\n    if (markerMatch && paramMatches && paramMatches[2]) {\n      const { key, optional, repeat } = parseMatchedParameter(paramMatches[2])\n      groups[key] = { pos: groupIndex++, repeat, optional }\n      segments.push(`/${escapeStringRegexp(markerMatch)}([^/]+?)`)\n    } else if (paramMatches && paramMatches[2]) {\n      const { key, repeat, optional } = parseMatchedParameter(paramMatches[2])\n      groups[key] = { pos: groupIndex++, repeat, optional }\n\n      if (includePrefix && paramMatches[1]) {\n        segments.push(`/${escapeStringRegexp(paramMatches[1])}`)\n      }\n\n      let s = repeat ? (optional ? '(?:/(.+?))?' : '/(.+?)') : '/([^/]+?)'\n\n      // Remove the leading slash if includePrefix already added it.\n      if (includePrefix && paramMatches[1]) {\n        s = s.substring(1)\n      }\n\n      segments.push(s)\n    } else {\n      segments.push(`/${escapeStringRegexp(segment)}`)\n    }\n\n    // If there's a suffix, add it to the segments if it's enabled.\n    if (includeSuffix && paramMatches && paramMatches[3]) {\n      segments.push(escapeStringRegexp(paramMatches[3]))\n    }\n  }\n\n  return {\n    parameterizedRoute: segments.join(''),\n    groups,\n  }\n}\n\n/**\n * From a normalized route this function generates a regular expression and\n * a corresponding groups object intended to be used to store matching groups\n * from the regular expression.\n */\nexport function getRouteRegex(\n  normalizedRoute: string,\n  {\n    includeSuffix = false,\n    includePrefix = false,\n    excludeOptionalTrailingSlash = false,\n  }: GetRouteRegexOptions = {}\n): RouteRegex {\n  const { parameterizedRoute, groups } = getParametrizedRoute(\n    normalizedRoute,\n    includeSuffix,\n    includePrefix\n  )\n\n  let re = parameterizedRoute\n  if (!excludeOptionalTrailingSlash) {\n    re += '(?:/)?'\n  }\n\n  return {\n    re: new RegExp(`^${re}$`),\n    groups: groups,\n  }\n}\n\n/**\n * Builds a function to generate a minimal routeKey using only a-z and minimal\n * number of characters.\n */\nfunction buildGetSafeRouteKey() {\n  let i = 0\n\n  return () => {\n    let routeKey = ''\n    let j = ++i\n    while (j > 0) {\n      routeKey += String.fromCharCode(97 + ((j - 1) % 26))\n      j = Math.floor((j - 1) / 26)\n    }\n    return routeKey\n  }\n}\n\nfunction getSafeKeyFromSegment({\n  interceptionMarker,\n  getSafeRouteKey,\n  segment,\n  routeKeys,\n  keyPrefix,\n  backreferenceDuplicateKeys,\n}: {\n  interceptionMarker?: string\n  getSafeRouteKey: () => string\n  segment: string\n  routeKeys: Record<string, string>\n  keyPrefix?: string\n  backreferenceDuplicateKeys: boolean\n}) {\n  const { key, optional, repeat } = parseMatchedParameter(segment)\n\n  // replace any non-word characters since they can break\n  // the named regex\n  let cleanedKey = key.replace(/\\W/g, '')\n\n  if (keyPrefix) {\n    cleanedKey = `${keyPrefix}${cleanedKey}`\n  }\n  let invalidKey = false\n\n  // check if the key is still invalid and fallback to using a known\n  // safe key\n  if (cleanedKey.length === 0 || cleanedKey.length > 30) {\n    invalidKey = true\n  }\n  if (!isNaN(parseInt(cleanedKey.slice(0, 1)))) {\n    invalidKey = true\n  }\n\n  if (invalidKey) {\n    cleanedKey = getSafeRouteKey()\n  }\n\n  const duplicateKey = cleanedKey in routeKeys\n\n  if (keyPrefix) {\n    routeKeys[cleanedKey] = `${keyPrefix}${key}`\n  } else {\n    routeKeys[cleanedKey] = key\n  }\n\n  // if the segment has an interception marker, make sure that's part of the regex pattern\n  // this is to ensure that the route with the interception marker doesn't incorrectly match\n  // the non-intercepted route (ie /app/(.)[username] should not match /app/[username])\n  const interceptionPrefix = interceptionMarker\n    ? escapeStringRegexp(interceptionMarker)\n    : ''\n\n  let pattern: string\n  if (duplicateKey && backreferenceDuplicateKeys) {\n    // Use a backreference to the key to ensure that the key is the same value\n    // in each of the placeholders.\n    pattern = `\\\\k<${cleanedKey}>`\n  } else if (repeat) {\n    pattern = `(?<${cleanedKey}>.+?)`\n  } else {\n    pattern = `(?<${cleanedKey}>[^/]+?)`\n  }\n\n  return optional\n    ? `(?:/${interceptionPrefix}${pattern})?`\n    : `/${interceptionPrefix}${pattern}`\n}\n\nfunction getNamedParametrizedRoute(\n  route: string,\n  prefixRouteKeys: boolean,\n  includeSuffix: boolean,\n  includePrefix: boolean,\n  backreferenceDuplicateKeys: boolean\n) {\n  const getSafeRouteKey = buildGetSafeRouteKey()\n  const routeKeys: { [named: string]: string } = {}\n\n  const segments: string[] = []\n  for (const segment of removeTrailingSlash(route).slice(1).split('/')) {\n    const hasInterceptionMarker = INTERCEPTION_ROUTE_MARKERS.some((m) =>\n      segment.startsWith(m)\n    )\n\n    const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters\n\n    if (hasInterceptionMarker && paramMatches && paramMatches[2]) {\n      // If there's an interception marker, add it to the segments.\n      segments.push(\n        getSafeKeyFromSegment({\n          getSafeRouteKey,\n          interceptionMarker: paramMatches[1],\n          segment: paramMatches[2],\n          routeKeys,\n          keyPrefix: prefixRouteKeys\n            ? NEXT_INTERCEPTION_MARKER_PREFIX\n            : undefined,\n          backreferenceDuplicateKeys,\n        })\n      )\n    } else if (paramMatches && paramMatches[2]) {\n      // If there's a prefix, add it to the segments if it's enabled.\n      if (includePrefix && paramMatches[1]) {\n        segments.push(`/${escapeStringRegexp(paramMatches[1])}`)\n      }\n\n      let s = getSafeKeyFromSegment({\n        getSafeRouteKey,\n        segment: paramMatches[2],\n        routeKeys,\n        keyPrefix: prefixRouteKeys ? NEXT_QUERY_PARAM_PREFIX : undefined,\n        backreferenceDuplicateKeys,\n      })\n\n      // Remove the leading slash if includePrefix already added it.\n      if (includePrefix && paramMatches[1]) {\n        s = s.substring(1)\n      }\n\n      segments.push(s)\n    } else {\n      segments.push(`/${escapeStringRegexp(segment)}`)\n    }\n\n    // If there's a suffix, add it to the segments if it's enabled.\n    if (includeSuffix && paramMatches && paramMatches[3]) {\n      segments.push(escapeStringRegexp(paramMatches[3]))\n    }\n  }\n\n  return {\n    namedParameterizedRoute: segments.join(''),\n    routeKeys,\n  }\n}\n\n/**\n * This function extends `getRouteRegex` generating also a named regexp where\n * each group is named along with a routeKeys object that indexes the assigned\n * named group with its corresponding key. When the routeKeys need to be\n * prefixed to uniquely identify internally the \"prefixRouteKey\" arg should\n * be \"true\" currently this is only the case when creating the routes-manifest\n * during the build\n */\nexport function getNamedRouteRegex(\n  normalizedRoute: string,\n  options: GetNamedRouteRegexOptions\n) {\n  const result = getNamedParametrizedRoute(\n    normalizedRoute,\n    options.prefixRouteKeys,\n    options.includeSuffix ?? false,\n    options.includePrefix ?? false,\n    options.backreferenceDuplicateKeys ?? false\n  )\n\n  let namedRegex = result.namedParameterizedRoute\n  if (!options.excludeOptionalTrailingSlash) {\n    namedRegex += '(?:/)?'\n  }\n\n  return {\n    ...getRouteRegex(normalizedRoute, options),\n    namedRegex: `^${namedRegex}$`,\n    routeKeys: result.routeKeys,\n  }\n}\n\n/**\n * Generates a named regexp.\n * This is intended to be using for build time only.\n */\nexport function getNamedMiddlewareRegex(\n  normalizedRoute: string,\n  options: {\n    catchAll?: boolean\n  }\n) {\n  const { parameterizedRoute } = getParametrizedRoute(\n    normalizedRoute,\n    false,\n    false\n  )\n  const { catchAll = true } = options\n  if (parameterizedRoute === '/') {\n    let catchAllRegex = catchAll ? '.*' : ''\n    return {\n      namedRegex: `^/${catchAllRegex}$`,\n    }\n  }\n\n  const { namedParameterizedRoute } = getNamedParametrizedRoute(\n    normalizedRoute,\n    false,\n    false,\n    false,\n    false\n  )\n  let catchAllGroupedRegex = catchAll ? '(?:(/.*)?)' : ''\n  return {\n    namedRegex: `^${namedParameterizedRoute}${catchAllGroupedRegex}$`,\n  }\n}\n","import type { ParsedUrlQuery } from 'querystring'\n\nimport { getRouteMatcher } from './route-matcher'\nimport { getRouteRegex } from './route-regex'\n\nexport function interpolateAs(\n  route: string,\n  asPathname: string,\n  query: ParsedUrlQuery\n) {\n  let interpolatedRoute = ''\n\n  const dynamicRegex = getRouteRegex(route)\n  const dynamicGroups = dynamicRegex.groups\n  const dynamicMatches =\n    // Try to match the dynamic route against the asPath\n    (asPathname !== route ? getRouteMatcher(dynamicRegex)(asPathname) : '') ||\n    // Fall back to reading the values from the href\n    // TODO: should this take priority; also need to change in the router.\n    query\n\n  interpolatedRoute = route\n  const params = Object.keys(dynamicGroups)\n\n  if (\n    !params.every((param) => {\n      let value = dynamicMatches[param] || ''\n      const { repeat, optional } = dynamicGroups[param]\n\n      // support single-level catch-all\n      // TODO: more robust handling for user-error (passing `/`)\n      let replaced = `[${repeat ? '...' : ''}${param}]`\n      if (optional) {\n        replaced = `${!value ? '/' : ''}[${replaced}]`\n      }\n      if (repeat && !Array.isArray(value)) value = [value]\n\n      return (\n        (optional || param in dynamicMatches) &&\n        // Interpolate group into data URL if present\n        (interpolatedRoute =\n          interpolatedRoute!.replace(\n            replaced,\n            repeat\n              ? (value as string[])\n                  .map(\n                    // these values should be fully encoded instead of just\n                    // path delimiter escaped since they are being inserted\n                    // into the URL and we expect URL encoded segments\n                    // when parsing dynamic route params\n                    (segment) => encodeURIComponent(segment)\n                  )\n                  .join('/')\n              : encodeURIComponent(value as string)\n          ) || '/')\n      )\n    })\n  ) {\n    interpolatedRoute = '' // did not satisfy all requirements\n\n    // n.b. We ignore this error because we handle warning for this case in\n    // development in the `<Link>` component directly.\n  }\n  return {\n    params,\n    result: interpolatedRoute,\n  }\n}\n","import type { NextRouter, Url } from '../shared/lib/router/router'\n\nimport { searchParamsToUrlQuery } from '../shared/lib/router/utils/querystring'\nimport { formatWithValidation } from '../shared/lib/router/utils/format-url'\nimport { omit } from '../shared/lib/router/utils/omit'\nimport { normalizeRepeatedSlashes } from '../shared/lib/utils'\nimport { normalizePathTrailingSlash } from './normalize-trailing-slash'\nimport { isLocalURL } from '../shared/lib/router/utils/is-local-url'\nimport { isDynamicRoute } from '../shared/lib/router/utils'\nimport { interpolateAs } from '../shared/lib/router/utils/interpolate-as'\n\n/**\n * Resolves a given hyperlink with a certain router state (basePath not included).\n * Preserves absolute urls.\n */\nexport function resolveHref(\n  router: NextRouter,\n  href: Url,\n  resolveAs: true\n): [string, string] | [string]\nexport function resolveHref(\n  router: NextRouter,\n  href: Url,\n  resolveAs?: false\n): string\nexport function resolveHref(\n  router: NextRouter,\n  href: Url,\n  resolveAs?: boolean\n): [string, string] | [string] | string {\n  // we use a dummy base url for relative urls\n  let base: URL\n  let urlAsString = typeof href === 'string' ? href : formatWithValidation(href)\n\n  // repeated slashes and backslashes in the URL are considered\n  // invalid and will never match a Next.js page/file\n  // https://www.rfc-editor.org/rfc/rfc3986.html#section-3.1\n  const urlProtoMatch = urlAsString.match(/^[a-z][a-z0-9+.-]*:\\/\\//i)\n  const urlAsStringNoProto = urlProtoMatch\n    ? urlAsString.slice(urlProtoMatch[0].length)\n    : urlAsString\n\n  const urlParts = urlAsStringNoProto.split('?', 1)\n\n  if ((urlParts[0] || '').match(/(\\/\\/|\\\\)/)) {\n    console.error(\n      `Invalid href '${urlAsString}' passed to next/router in page: '${router.pathname}'. Repeated forward-slashes (//) or backslashes \\\\ are not valid in the href.`\n    )\n    const normalizedUrl = normalizeRepeatedSlashes(urlAsStringNoProto)\n    urlAsString = (urlProtoMatch ? urlProtoMatch[0] : '') + normalizedUrl\n  }\n\n  // Return because it cannot be routed by the Next.js router\n  if (!isLocalURL(urlAsString)) {\n    return (resolveAs ? [urlAsString] : urlAsString) as string\n  }\n\n  try {\n    base = new URL(\n      urlAsString.startsWith('#') ? router.asPath : router.pathname,\n      'http://n'\n    )\n  } catch (_) {\n    // fallback to / for invalid asPath values e.g. //\n    base = new URL('/', 'http://n')\n  }\n\n  try {\n    const finalUrl = new URL(urlAsString, base)\n    finalUrl.pathname = normalizePathTrailingSlash(finalUrl.pathname)\n    let interpolatedAs = ''\n\n    if (\n      isDynamicRoute(finalUrl.pathname) &&\n      finalUrl.searchParams &&\n      resolveAs\n    ) {\n      const query = searchParamsToUrlQuery(finalUrl.searchParams)\n\n      const { result, params } = interpolateAs(\n        finalUrl.pathname,\n        finalUrl.pathname,\n        query\n      )\n\n      if (result) {\n        interpolatedAs = formatWithValidation({\n          pathname: result,\n          hash: finalUrl.hash,\n          query: omit(query, params),\n        })\n      }\n    }\n\n    // if the origin didn't change, it means we received a relative href\n    const resolvedHref =\n      finalUrl.origin === base.origin\n        ? finalUrl.href.slice(finalUrl.origin.length)\n        : finalUrl.href\n\n    return resolveAs\n      ? [resolvedHref, interpolatedAs || resolvedHref]\n      : resolvedHref\n  } catch (_) {\n    return resolveAs ? [urlAsString] : urlAsString\n  }\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */\nexport function addPathPrefix(path: string, prefix?: string) {\n  if (!path.startsWith('/') || !prefix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${prefix}${pathname}${query}${hash}`\n}\n","import { addPathPrefix } from './add-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\n\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */\nexport function addLocale(\n  path: string,\n  locale?: string | false,\n  defaultLocale?: string,\n  ignorePrefix?: boolean\n) {\n  // If no locale was given or the locale is the default locale, we don't need\n  // to prefix the path.\n  if (!locale || locale === defaultLocale) return path\n\n  const lower = path.toLowerCase()\n\n  // If the path is an API path or the path already has the locale prefix, we\n  // don't need to prefix the path.\n  if (!ignorePrefix) {\n    if (pathHasPrefix(lower, '/api')) return path\n    if (pathHasPrefix(lower, `/${locale.toLowerCase()}`)) return path\n  }\n\n  // Add the locale prefix to the path.\n  return addPathPrefix(path, `/${locale}`)\n}\n","import type { addLocale as Fn } from '../shared/lib/router/utils/add-locale'\nimport { normalizePathTrailingSlash } from './normalize-trailing-slash'\n\nexport const addLocale: typeof Fn = (path, ...args) => {\n  if (process.env.__NEXT_I18N_SUPPORT) {\n    return normalizePathTrailingSlash(\n      (\n        require('../shared/lib/router/utils/add-locale') as typeof import('../shared/lib/router/utils/add-locale')\n      ).addLocale(path, ...args)\n    )\n  }\n  return path\n}\n","\"use strict\";\n\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\nexports._ = _interop_require_default;\n","import React from 'react'\nimport type { NextRouter } from './router/router'\n\nexport const RouterContext = React.createContext<NextRouter | null>(null)\n\nif (process.env.NODE_ENV !== 'production') {\n  RouterContext.displayName = 'RouterContext'\n}\n","export const requestIdleCallback =\n  (typeof self !== 'undefined' &&\n    self.requestIdleCallback &&\n    self.requestIdleCallback.bind(window)) ||\n  function (cb: IdleRequestCallback): number {\n    let start = Date.now()\n    return self.setTimeout(function () {\n      cb({\n        didTimeout: false,\n        timeRemaining: function () {\n          return Math.max(0, 50 - (Date.now() - start))\n        },\n      })\n    }, 1)\n  }\n\nexport const cancelIdleCallback =\n  (typeof self !== 'undefined' &&\n    self.cancelIdleCallback &&\n    self.cancelIdleCallback.bind(window)) ||\n  function (id: number) {\n    return clearTimeout(id)\n  }\n","import { useCallback, useEffect, useRef, useState } from 'react'\nimport {\n  requestIdleCallback,\n  cancelIdleCallback,\n} from './request-idle-callback'\n\ntype UseIntersectionObserverInit = Pick<\n  IntersectionObserverInit,\n  'rootMargin' | 'root'\n>\n\ntype UseIntersection = { disabled?: boolean } & UseIntersectionObserverInit & {\n    rootRef?: React.RefObject<HTMLElement | null> | null\n  }\ntype ObserveCallback = (isVisible: boolean) => void\ntype Identifier = {\n  root: Element | Document | null\n  margin: string\n}\ntype Observer = {\n  id: Identifier\n  observer: IntersectionObserver\n  elements: Map<Element, ObserveCallback>\n}\n\nconst hasIntersectionObserver = typeof IntersectionObserver === 'function'\n\nconst observers = new Map<Identifier, Observer>()\nconst idList: Identifier[] = []\n\nfunction createObserver(options: UseIntersectionObserverInit): Observer {\n  const id = {\n    root: options.root || null,\n    margin: options.rootMargin || '',\n  }\n  const existing = idList.find(\n    (obj) => obj.root === id.root && obj.margin === id.margin\n  )\n  let instance: Observer | undefined\n\n  if (existing) {\n    instance = observers.get(existing)\n    if (instance) {\n      return instance\n    }\n  }\n\n  const elements = new Map<Element, ObserveCallback>()\n  const observer = new IntersectionObserver((entries) => {\n    entries.forEach((entry) => {\n      const callback = elements.get(entry.target)\n      const isVisible = entry.isIntersecting || entry.intersectionRatio > 0\n      if (callback && isVisible) {\n        callback(isVisible)\n      }\n    })\n  }, options)\n  instance = {\n    id,\n    observer,\n    elements,\n  }\n\n  idList.push(id)\n  observers.set(id, instance)\n  return instance\n}\n\nfunction observe(\n  element: Element,\n  callback: ObserveCallback,\n  options: UseIntersectionObserverInit\n): () => void {\n  const { id, observer, elements } = createObserver(options)\n  elements.set(element, callback)\n\n  observer.observe(element)\n  return function unobserve(): void {\n    elements.delete(element)\n    observer.unobserve(element)\n\n    // Destroy observer when there's nothing left to watch:\n    if (elements.size === 0) {\n      observer.disconnect()\n      observers.delete(id)\n      const index = idList.findIndex(\n        (obj) => obj.root === id.root && obj.margin === id.margin\n      )\n      if (index > -1) {\n        idList.splice(index, 1)\n      }\n    }\n  }\n}\n\nexport function useIntersection<T extends Element>({\n  rootRef,\n  rootMargin,\n  disabled,\n}: UseIntersection): [(element: T | null) => void, boolean, () => void] {\n  const isDisabled: boolean = disabled || !hasIntersectionObserver\n\n  const [visible, setVisible] = useState(false)\n  const elementRef = useRef<T | null>(null)\n  const setElement = useCallback((element: T | null) => {\n    elementRef.current = element\n  }, [])\n\n  useEffect(() => {\n    if (hasIntersectionObserver) {\n      if (isDisabled || visible) return\n\n      const element = elementRef.current\n      if (element && element.tagName) {\n        const unobserve = observe(\n          element,\n          (isVisible) => isVisible && setVisible(isVisible),\n          { root: rootRef?.current, rootMargin }\n        )\n\n        return unobserve\n      }\n    } else {\n      if (!visible) {\n        const idleCallback = requestIdleCallback(() => setVisible(true))\n        return () => cancelIdleCallback(idleCallback)\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDisabled, rootMargin, rootRef, visible, elementRef.current])\n\n  const resetVisible = useCallback(() => {\n    setVisible(false)\n  }, [])\n\n  return [setElement, visible, resetVisible]\n}\n","export interface PathLocale {\n  detectedLocale?: string\n  pathname: string\n}\n\n/**\n * A cache of lowercased locales for each list of locales. This is stored as a\n * WeakMap so if the locales are garbage collected, the cache entry will be\n * removed as well.\n */\nconst cache = new WeakMap<readonly string[], readonly string[]>()\n\n/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */\nexport function normalizeLocalePath(\n  pathname: string,\n  locales?: readonly string[]\n): PathLocale {\n  // If locales is undefined, return the pathname as is.\n  if (!locales) return { pathname }\n\n  // Get the cached lowercased locales or create a new cache entry.\n  let lowercasedLocales = cache.get(locales)\n  if (!lowercasedLocales) {\n    lowercasedLocales = locales.map((locale) => locale.toLowerCase())\n    cache.set(locales, lowercasedLocales)\n  }\n\n  let detectedLocale: string | undefined\n\n  // The first segment will be empty, because it has a leading `/`. If\n  // there is no further segment, there is no locale (or it's the default).\n  const segments = pathname.split('/', 2)\n\n  // If there's no second segment (ie, the pathname is just `/`), there's no\n  // locale.\n  if (!segments[1]) return { pathname }\n\n  // The second segment will contain the locale part if any.\n  const segment = segments[1].toLowerCase()\n\n  // See if the segment matches one of the locales. If it doesn't, there is\n  // no locale (or it's the default).\n  const index = lowercasedLocales.indexOf(segment)\n  if (index < 0) return { pathname }\n\n  // Return the case-sensitive locale.\n  detectedLocale = locales[index]\n\n  // Remove the `/${locale}` part of the pathname.\n  pathname = pathname.slice(detectedLocale.length + 1) || '/'\n\n  return { pathname, detectedLocale }\n}\n","import type { normalizeLocalePath as Fn } from '../shared/lib/i18n/normalize-locale-path'\n\nexport const normalizeLocalePath: typeof Fn = (pathname, locales) => {\n  if (process.env.__NEXT_I18N_SUPPORT) {\n    return (\n      require('../shared/lib/i18n/normalize-locale-path') as typeof import('../shared/lib/i18n/normalize-locale-path')\n    ).normalizeLocalePath(pathname, locales)\n  }\n  return { pathname, detectedLocale: undefined }\n}\n","import type { DomainLocale } from '../../../server/config-shared'\n\nexport function detectDomainLocale(\n  domainItems?: readonly DomainLocale[],\n  hostname?: string,\n  detectedLocale?: string\n) {\n  if (!domainItems) return\n\n  if (detectedLocale) {\n    detectedLocale = detectedLocale.toLowerCase()\n  }\n\n  for (const item of domainItems) {\n    // remove port if present\n    const domainHostname = item.domain?.split(':', 1)[0].toLowerCase()\n    if (\n      hostname === domainHostname ||\n      detectedLocale === item.defaultLocale.toLowerCase() ||\n      item.locales?.some((locale) => locale.toLowerCase() === detectedLocale)\n    ) {\n      return item\n    }\n  }\n}\n","import type { detectDomainLocale as Fn } from '../shared/lib/i18n/detect-domain-locale'\n\nexport const detectDomainLocale: typeof Fn = (...args) => {\n  if (process.env.__NEXT_I18N_SUPPORT) {\n    return (\n      require('../shared/lib/i18n/detect-domain-locale') as typeof import('../shared/lib/i18n/detect-domain-locale')\n    ).detectDomainLocale(...args)\n  }\n}\n","import type { DomainLocale } from '../server/config'\nimport type { normalizeLocalePath as NormalizeFn } from './normalize-locale-path'\nimport type { detectDomainLocale as DetectFn } from './detect-domain-locale'\nimport { normalizePathTrailingSlash } from './normalize-trailing-slash'\n\nconst basePath = (process.env.__NEXT_ROUTER_BASEPATH as string) || ''\n\nexport function getDomainLocale(\n  path: string,\n  locale?: string | false,\n  locales?: readonly string[],\n  domainLocales?: readonly DomainLocale[]\n) {\n  if (process.env.__NEXT_I18N_SUPPORT) {\n    const normalizeLocalePath: typeof NormalizeFn = (\n      require('./normalize-locale-path') as typeof import('./normalize-locale-path')\n    ).normalizeLocalePath\n    const detectDomainLocale: typeof DetectFn = (\n      require('./detect-domain-locale') as typeof import('./detect-domain-locale')\n    ).detectDomainLocale\n\n    const target = locale || normalizeLocalePath(path, locales).detectedLocale\n    const domain = detectDomainLocale(domainLocales, undefined, target)\n    if (domain) {\n      const proto = `http${domain.http ? '' : 's'}://`\n      const finalLocale = target === domain.defaultLocale ? '' : `/${target}`\n      return `${proto}${domain.domain}${normalizePathTrailingSlash(\n        `${basePath}${finalLocale}${path}`\n      )}`\n    }\n    return false\n  } else {\n    return false\n  }\n}\n","import { addPathPrefix } from '../shared/lib/router/utils/add-path-prefix'\nimport { normalizePathTrailingSlash } from './normalize-trailing-slash'\n\nconst basePath = (process.env.__NEXT_ROUTER_BASEPATH as string) || ''\n\nexport function addBasePath(path: string, required?: boolean): string {\n  return normalizePathTrailingSlash(\n    process.env.__NEXT_MANUAL_CLIENT_BASE_PATH && !required\n      ? path\n      : addPathPrefix(path, basePath)\n  )\n}\n","import { useCallback, useRef, type Ref } from 'react'\n\n// This is a compatibility hook to support React 18 and 19 refs.\n// In 19, a cleanup function from refs may be returned.\n// In 18, returning a cleanup function creates a warning.\n// Since we take userspace refs, we don't know ahead of time if a cleanup function will be returned.\n// This implements cleanup functions with the old behavior in 18.\n// We know refs are always called alternating with `null` and then `T`.\n// So a call with `null` means we need to call the previous cleanup functions.\nexport function useMergedRef<TElement>(\n  refA: Ref<TElement>,\n  refB: Ref<TElement>\n): Ref<TElement> {\n  const cleanupA = useRef<(() => void) | null>(null)\n  const cleanupB = useRef<(() => void) | null>(null)\n\n  // NOTE: In theory, we could skip the wrapping if only one of the refs is non-null.\n  // (this happens often if the user doesn't pass a ref to Link/Form/Image)\n  // But this can cause us to leak a cleanup-ref into user code (e.g. via `<Link legacyBehavior>`),\n  // and the user might pass that ref into ref-merging library that doesn't support cleanup refs\n  // (because it hasn't been updated for React 19)\n  // which can then cause things to blow up, because a cleanup-returning ref gets called with `null`.\n  // So in practice, it's safer to be defensive and always wrap the ref, even on React 19.\n  return useCallback(\n    (current: TElement | null): void => {\n      if (current === null) {\n        const cleanupFnA = cleanupA.current\n        if (cleanupFnA) {\n          cleanupA.current = null\n          cleanupFnA()\n        }\n        const cleanupFnB = cleanupB.current\n        if (cleanupFnB) {\n          cleanupB.current = null\n          cleanupFnB()\n        }\n      } else {\n        if (refA) {\n          cleanupA.current = applyRef(refA, current)\n        }\n        if (refB) {\n          cleanupB.current = applyRef(refB, current)\n        }\n      }\n    },\n    [refA, refB]\n  )\n}\n\nfunction applyRef<TElement>(\n  refA: NonNullable<Ref<TElement>>,\n  current: TElement\n) {\n  if (typeof refA === 'function') {\n    const cleanup = refA(current)\n    if (typeof cleanup === 'function') {\n      return cleanup\n    } else {\n      return () => refA(null)\n    }\n  } else {\n    refA.current = current\n    return () => {\n      refA.current = null\n    }\n  }\n}\n","let errorOnce = (_: string) => {}\nif (process.env.NODE_ENV !== 'production') {\n  const errors = new Set<string>()\n  errorOnce = (msg: string) => {\n    if (!errors.has(msg)) {\n      console.error(msg)\n    }\n    errors.add(msg)\n  }\n}\n\nexport { errorOnce }\n","'use client'\n\nimport type {\n  NextRouter,\n  PrefetchOptions as RouterPrefetchOptions,\n} from '../shared/lib/router/router'\n\nimport React, { createContext, useContext } from 'react'\nimport type { UrlObject } from 'url'\nimport { resolveHref } from './resolve-href'\nimport { isLocalURL } from '../shared/lib/router/utils/is-local-url'\nimport { formatUrl } from '../shared/lib/router/utils/format-url'\nimport { isAbsoluteUrl } from '../shared/lib/utils'\nimport { addLocale } from './add-locale'\nimport { RouterContext } from '../shared/lib/router-context.shared-runtime'\nimport type { AppRouterInstance } from '../shared/lib/app-router-context.shared-runtime'\nimport { useIntersection } from './use-intersection'\nimport { getDomainLocale } from './get-domain-locale'\nimport { addBasePath } from './add-base-path'\nimport { useMergedRef } from './use-merged-ref'\nimport { errorOnce } from '../shared/lib/utils/error-once'\n\ntype Url = string | UrlObject\ntype RequiredKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? never : K\n}[keyof T]\ntype OptionalKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? K : never\n}[keyof T]\n\ntype OnNavigateEventHandler = (event: { preventDefault: () => void }) => void\n\ntype InternalLinkProps = {\n  /**\n   * The path or URL to navigate to. It can also be an object.\n   *\n   * @example https://nextjs.org/docs/api-reference/next/link#with-url-object\n   */\n  href: Url\n  /**\n   * Optional decorator for the path that will be shown in the browser URL bar. Before Next.js 9.5.3 this was used for dynamic routes, check our [previous docs](https://github.com/vercel/next.js/blob/v9.5.2/docs/api-reference/next/link.md#dynamic-routes) to see how it worked. Note: when this path differs from the one provided in `href` the previous `href`/`as` behavior is used as shown in the [previous docs](https://github.com/vercel/next.js/blob/v9.5.2/docs/api-reference/next/link.md#dynamic-routes).\n   */\n  as?: Url\n  /**\n   * Replace the current `history` state instead of adding a new url into the stack.\n   *\n   * @defaultValue `false`\n   */\n  replace?: boolean\n  /**\n   * Whether to override the default scroll behavior\n   *\n   * @example https://nextjs.org/docs/api-reference/next/link#disable-scrolling-to-the-top-of-the-page\n   *\n   * @defaultValue `true`\n   */\n  scroll?: boolean\n  /**\n   * Update the path of the current page without rerunning [`getStaticProps`](https://nextjs.org/docs/pages/building-your-application/data-fetching/get-static-props), [`getServerSideProps`](https://nextjs.org/docs/pages/building-your-application/data-fetching/get-server-side-props) or [`getInitialProps`](/docs/pages/api-reference/functions/get-initial-props).\n   *\n   * @defaultValue `false`\n   */\n  shallow?: boolean\n  /**\n   * Forces `Link` to send the `href` property to its child.\n   *\n   * @defaultValue `false`\n   */\n  passHref?: boolean\n  /**\n   * Prefetch the page in the background.\n   * Any `<Link />` that is in the viewport (initially or through scroll) will be prefetched.\n   * Prefetch can be disabled by passing `prefetch={false}`. Prefetching is only enabled in production.\n   *\n   * In App Router:\n   * - \"auto\", null, undefined (default): For statically generated pages, this will prefetch the full React Server Component data. For dynamic pages, this will prefetch up to the nearest route segment with a [`loading.js`](https://nextjs.org/docs/app/api-reference/file-conventions/loading) file. If there is no loading file, it will not fetch the full tree to avoid fetching too much data.\n   * - `true`: This will prefetch the full React Server Component data for all route segments, regardless of whether they contain a segment with `loading.js`.\n   * - `false`: This will not prefetch any data, even on hover.\n   *\n   * In Pages Router:\n   * - `true` (default): The full route & its data will be prefetched.\n   * - `false`: Prefetching will not happen when entering the viewport, but will still happen on hover.\n   * @defaultValue `true` (pages router) or `null` (app router)\n   */\n  prefetch?: boolean | 'auto' | null\n  /**\n   * The active locale is automatically prepended. `locale` allows for providing a different locale.\n   * When `false` `href` has to include the locale as the default behavior is disabled.\n   * Note: This is only available in the Pages Router.\n   */\n  locale?: string | false\n  /**\n   * Enable legacy link behavior.\n   * @deprecated This will be removed in v16\n   * @defaultValue `false`\n   * @see https://github.com/vercel/next.js/commit/489e65ed98544e69b0afd7e0cfc3f9f6c2b803b7\n   */\n  legacyBehavior?: boolean\n  /**\n   * Optional event handler for when the mouse pointer is moved onto Link\n   */\n  onMouseEnter?: React.MouseEventHandler<HTMLAnchorElement>\n  /**\n   * Optional event handler for when Link is touched.\n   */\n  onTouchStart?: React.TouchEventHandler<HTMLAnchorElement>\n  /**\n   * Optional event handler for when Link is clicked.\n   */\n  onClick?: React.MouseEventHandler<HTMLAnchorElement>\n  /**\n   * Optional event handler for when the `<Link>` is navigated.\n   */\n  onNavigate?: OnNavigateEventHandler\n}\n\n// TODO-APP: Include the full set of Anchor props\n// adding this to the publicly exported type currently breaks existing apps\n\n// `RouteInferType` is a stub here to avoid breaking `typedRoutes` when the type\n// isn't generated yet. It will be replaced when the webpack plugin runs.\n// WARNING: This should be an interface to prevent TypeScript from inlining it\n// in declarations of libraries dependending on Next.js.\n// Not trivial to reproduce so only convert to an interface when needed.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport interface LinkProps<RouteInferType = any> extends InternalLinkProps {}\ntype LinkPropsRequired = RequiredKeys<LinkProps>\ntype LinkPropsOptional = OptionalKeys<InternalLinkProps>\n\nconst prefetched = new Set<string>()\n\ntype PrefetchOptions = RouterPrefetchOptions & {\n  /**\n   * bypassPrefetchedCheck will bypass the check to see if the `href` has\n   * already been fetched.\n   */\n  bypassPrefetchedCheck?: boolean\n}\n\nfunction prefetch(\n  router: NextRouter,\n  href: string,\n  as: string,\n  options: PrefetchOptions\n): void {\n  if (typeof window === 'undefined') {\n    return\n  }\n\n  if (!isLocalURL(href)) {\n    return\n  }\n\n  // We should only dedupe requests when experimental.optimisticClientCache is\n  // disabled.\n  if (!options.bypassPrefetchedCheck) {\n    const locale =\n      // Let the link's locale prop override the default router locale.\n      typeof options.locale !== 'undefined'\n        ? options.locale\n        : // Otherwise fallback to the router's locale.\n          'locale' in router\n          ? router.locale\n          : undefined\n\n    const prefetchedKey = href + '%' + as + '%' + locale\n\n    // If we've already fetched the key, then don't prefetch it again!\n    if (prefetched.has(prefetchedKey)) {\n      return\n    }\n\n    // Mark this URL as prefetched.\n    prefetched.add(prefetchedKey)\n  }\n\n  // Prefetch the JSON page if asked (only in the client)\n  // We need to handle a prefetch error here since we may be\n  // loading with priority which can reject but we don't\n  // want to force navigation since this is only a prefetch\n  router.prefetch(href, as, options).catch((err) => {\n    if (process.env.NODE_ENV !== 'production') {\n      // rethrow to show invalid URL errors\n      throw err\n    }\n  })\n}\n\nfunction isModifiedEvent(event: React.MouseEvent): boolean {\n  const eventTarget = event.currentTarget as HTMLAnchorElement | SVGAElement\n  const target = eventTarget.getAttribute('target')\n  return (\n    (target && target !== '_self') ||\n    event.metaKey ||\n    event.ctrlKey ||\n    event.shiftKey ||\n    event.altKey || // triggers resource download\n    (event.nativeEvent && event.nativeEvent.which === 2)\n  )\n}\n\nfunction linkClicked(\n  e: React.MouseEvent,\n  router: NextRouter | AppRouterInstance,\n  href: string,\n  as: string,\n  replace?: boolean,\n  shallow?: boolean,\n  scroll?: boolean,\n  locale?: string | false,\n  onNavigate?: OnNavigateEventHandler\n): void {\n  const { nodeName } = e.currentTarget\n\n  // anchors inside an svg have a lowercase nodeName\n  const isAnchorNodeName = nodeName.toUpperCase() === 'A'\n\n  if (\n    (isAnchorNodeName && isModifiedEvent(e)) ||\n    e.currentTarget.hasAttribute('download')\n  ) {\n    // ignore click for browser’s default behavior\n    return\n  }\n\n  if (!isLocalURL(href)) {\n    if (replace) {\n      // browser default behavior does not replace the history state\n      // so we need to do it manually\n      e.preventDefault()\n      location.replace(href)\n    }\n\n    // ignore click for browser’s default behavior\n    return\n  }\n\n  e.preventDefault()\n\n  const navigate = () => {\n    if (onNavigate) {\n      let isDefaultPrevented = false\n\n      onNavigate({\n        preventDefault: () => {\n          isDefaultPrevented = true\n        },\n      })\n\n      if (isDefaultPrevented) {\n        return\n      }\n    }\n\n    // If the router is an NextRouter instance it will have `beforePopState`\n    const routerScroll = scroll ?? true\n    if ('beforePopState' in router) {\n      router[replace ? 'replace' : 'push'](href, as, {\n        shallow,\n        locale,\n        scroll: routerScroll,\n      })\n    } else {\n      router[replace ? 'replace' : 'push'](as || href, {\n        scroll: routerScroll,\n      })\n    }\n  }\n\n  navigate()\n}\n\ntype LinkPropsReal = React.PropsWithChildren<\n  Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, keyof LinkProps> &\n    LinkProps\n>\n\nfunction formatStringOrUrl(urlObjOrString: UrlObject | string): string {\n  if (typeof urlObjOrString === 'string') {\n    return urlObjOrString\n  }\n\n  return formatUrl(urlObjOrString)\n}\n\n/**\n * A React component that extends the HTML `<a>` element to provide [prefetching](https://nextjs.org/docs/app/building-your-application/routing/linking-and-navigating#2-prefetching)\n * and client-side navigation between routes.\n *\n * It is the primary way to navigate between routes in Next.js.\n *\n * Read more: [Next.js docs: `<Link>`](https://nextjs.org/docs/app/api-reference/components/link)\n */\nconst Link = React.forwardRef<HTMLAnchorElement, LinkPropsReal>(\n  function LinkComponent(props, forwardedRef) {\n    let children: React.ReactNode\n\n    const {\n      href: hrefProp,\n      as: asProp,\n      children: childrenProp,\n      prefetch: prefetchProp = null,\n      passHref,\n      replace,\n      shallow,\n      scroll,\n      locale,\n      onClick,\n      onNavigate,\n      onMouseEnter: onMouseEnterProp,\n      onTouchStart: onTouchStartProp,\n      legacyBehavior = false,\n      ...restProps\n    } = props\n\n    children = childrenProp\n\n    if (\n      legacyBehavior &&\n      (typeof children === 'string' || typeof children === 'number')\n    ) {\n      children = <a>{children}</a>\n    }\n\n    const router = React.useContext(RouterContext)\n\n    const prefetchEnabled = prefetchProp !== false\n\n    if (process.env.NODE_ENV !== 'production') {\n      function createPropError(args: {\n        key: string\n        expected: string\n        actual: string\n      }) {\n        return new Error(\n          `Failed prop type: The prop \\`${args.key}\\` expects a ${args.expected} in \\`<Link>\\`, but got \\`${args.actual}\\` instead.` +\n            (typeof window !== 'undefined'\n              ? // TODO: Remove this addendum if Owner Stacks are available\n                \"\\nOpen your browser's console to view the Component stack trace.\"\n              : '')\n        )\n      }\n\n      // TypeScript trick for type-guarding:\n      const requiredPropsGuard: Record<LinkPropsRequired, true> = {\n        href: true,\n      } as const\n      const requiredProps: LinkPropsRequired[] = Object.keys(\n        requiredPropsGuard\n      ) as LinkPropsRequired[]\n      requiredProps.forEach((key: LinkPropsRequired) => {\n        if (key === 'href') {\n          if (\n            props[key] == null ||\n            (typeof props[key] !== 'string' && typeof props[key] !== 'object')\n          ) {\n            throw createPropError({\n              key,\n              expected: '`string` or `object`',\n              actual: props[key] === null ? 'null' : typeof props[key],\n            })\n          }\n        } else {\n          // TypeScript trick for type-guarding:\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const _: never = key\n        }\n      })\n\n      // TypeScript trick for type-guarding:\n      const optionalPropsGuard: Record<LinkPropsOptional, true> = {\n        as: true,\n        replace: true,\n        scroll: true,\n        shallow: true,\n        passHref: true,\n        prefetch: true,\n        locale: true,\n        onClick: true,\n        onMouseEnter: true,\n        onTouchStart: true,\n        legacyBehavior: true,\n        onNavigate: true,\n      } as const\n      const optionalProps: LinkPropsOptional[] = Object.keys(\n        optionalPropsGuard\n      ) as LinkPropsOptional[]\n      optionalProps.forEach((key: LinkPropsOptional) => {\n        const valType = typeof props[key]\n\n        if (key === 'as') {\n          if (props[key] && valType !== 'string' && valType !== 'object') {\n            throw createPropError({\n              key,\n              expected: '`string` or `object`',\n              actual: valType,\n            })\n          }\n        } else if (key === 'locale') {\n          if (props[key] && valType !== 'string') {\n            throw createPropError({\n              key,\n              expected: '`string`',\n              actual: valType,\n            })\n          }\n        } else if (\n          key === 'onClick' ||\n          key === 'onMouseEnter' ||\n          key === 'onTouchStart' ||\n          key === 'onNavigate'\n        ) {\n          if (props[key] && valType !== 'function') {\n            throw createPropError({\n              key,\n              expected: '`function`',\n              actual: valType,\n            })\n          }\n        } else if (\n          key === 'replace' ||\n          key === 'scroll' ||\n          key === 'shallow' ||\n          key === 'passHref' ||\n          key === 'legacyBehavior'\n        ) {\n          if (props[key] != null && valType !== 'boolean') {\n            throw createPropError({\n              key,\n              expected: '`boolean`',\n              actual: valType,\n            })\n          }\n        } else if (key === 'prefetch') {\n          if (\n            props[key] != null &&\n            valType !== 'boolean' &&\n            props[key] !== 'auto'\n          ) {\n            throw createPropError({\n              key,\n              expected: '`boolean | \"auto\"`',\n              actual: valType,\n            })\n          }\n        } else {\n          // TypeScript trick for type-guarding:\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const _: never = key\n        }\n      })\n    }\n\n    const { href, as } = React.useMemo(() => {\n      if (!router) {\n        const resolvedHref = formatStringOrUrl(hrefProp)\n        return {\n          href: resolvedHref,\n          as: asProp ? formatStringOrUrl(asProp) : resolvedHref,\n        }\n      }\n\n      const [resolvedHref, resolvedAs] = resolveHref(router, hrefProp, true)\n\n      return {\n        href: resolvedHref,\n        as: asProp ? resolveHref(router, asProp) : resolvedAs || resolvedHref,\n      }\n    }, [router, hrefProp, asProp])\n\n    const previousHref = React.useRef<string>(href)\n    const previousAs = React.useRef<string>(as)\n\n    // This will return the first child, if multiple are provided it will throw an error\n    let child: any\n    if (legacyBehavior) {\n      if (process.env.NODE_ENV === 'development') {\n        if (onClick) {\n          console.warn(\n            `\"onClick\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link`\n          )\n        }\n        if (onMouseEnterProp) {\n          console.warn(\n            `\"onMouseEnter\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link`\n          )\n        }\n        try {\n          child = React.Children.only(children)\n        } catch (err) {\n          if (!children) {\n            throw new Error(\n              `No children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but one child is required https://nextjs.org/docs/messages/link-no-children`\n            )\n          }\n          throw new Error(\n            `Multiple children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children` +\n              (typeof window !== 'undefined'\n                ? \" \\nOpen your browser's console to view the Component stack trace.\"\n                : '')\n          )\n        }\n      } else {\n        child = React.Children.only(children)\n      }\n    } else {\n      if (process.env.NODE_ENV === 'development') {\n        if ((children as any)?.type === 'a') {\n          throw new Error(\n            'Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor'\n          )\n        }\n      }\n    }\n\n    const childRef: any = legacyBehavior\n      ? child && typeof child === 'object' && child.ref\n      : forwardedRef\n\n    const [setIntersectionRef, isVisible, resetVisible] = useIntersection({\n      rootMargin: '200px',\n    })\n\n    const setIntersectionWithResetRef = React.useCallback(\n      (el: Element | null) => {\n        // Before the link getting observed, check if visible state need to be reset\n        if (previousAs.current !== as || previousHref.current !== href) {\n          resetVisible()\n          previousAs.current = as\n          previousHref.current = href\n        }\n\n        setIntersectionRef(el)\n      },\n      [as, href, resetVisible, setIntersectionRef]\n    )\n\n    const setRef = useMergedRef(setIntersectionWithResetRef, childRef)\n\n    // Prefetch the URL if we haven't already and it's visible.\n    React.useEffect(() => {\n      // in dev, we only prefetch on hover to avoid wasting resources as the prefetch will trigger compiling the page.\n      if (process.env.NODE_ENV !== 'production') {\n        return\n      }\n\n      if (!router) {\n        return\n      }\n\n      // If we don't need to prefetch the URL, don't do prefetch.\n      if (!isVisible || !prefetchEnabled) {\n        return\n      }\n\n      // Prefetch the URL.\n      prefetch(router, href, as, { locale })\n    }, [as, href, isVisible, locale, prefetchEnabled, router?.locale, router])\n\n    const childProps: {\n      onTouchStart?: React.TouchEventHandler<HTMLAnchorElement>\n      onMouseEnter: React.MouseEventHandler<HTMLAnchorElement>\n      onClick: React.MouseEventHandler<HTMLAnchorElement>\n      href?: string\n      ref?: any\n    } = {\n      ref: setRef,\n      onClick(e) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (!e) {\n            throw new Error(\n              `Component rendered inside next/link has to pass click event to \"onClick\" prop.`\n            )\n          }\n        }\n\n        if (!legacyBehavior && typeof onClick === 'function') {\n          onClick(e)\n        }\n\n        if (\n          legacyBehavior &&\n          child.props &&\n          typeof child.props.onClick === 'function'\n        ) {\n          child.props.onClick(e)\n        }\n\n        if (!router) {\n          return\n        }\n\n        if (e.defaultPrevented) {\n          return\n        }\n\n        linkClicked(\n          e,\n          router,\n          href,\n          as,\n          replace,\n          shallow,\n          scroll,\n          locale,\n          onNavigate\n        )\n      },\n      onMouseEnter(e) {\n        if (!legacyBehavior && typeof onMouseEnterProp === 'function') {\n          onMouseEnterProp(e)\n        }\n\n        if (\n          legacyBehavior &&\n          child.props &&\n          typeof child.props.onMouseEnter === 'function'\n        ) {\n          child.props.onMouseEnter(e)\n        }\n\n        if (!router) {\n          return\n        }\n\n        prefetch(router, href, as, {\n          locale,\n          priority: true,\n          // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n          bypassPrefetchedCheck: true,\n        })\n      },\n      onTouchStart: process.env.__NEXT_LINK_NO_TOUCH_START\n        ? undefined\n        : function onTouchStart(e) {\n            if (!legacyBehavior && typeof onTouchStartProp === 'function') {\n              onTouchStartProp(e)\n            }\n\n            if (\n              legacyBehavior &&\n              child.props &&\n              typeof child.props.onTouchStart === 'function'\n            ) {\n              child.props.onTouchStart(e)\n            }\n\n            if (!router) {\n              return\n            }\n\n            prefetch(router, href, as, {\n              locale,\n              priority: true,\n              // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n              bypassPrefetchedCheck: true,\n            })\n          },\n    }\n\n    // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n    // defined, we specify the current 'href', so that repetition is not needed by the user.\n    // If the url is absolute, we can bypass the logic to prepend the domain and locale.\n    if (isAbsoluteUrl(as)) {\n      childProps.href = as\n    } else if (\n      !legacyBehavior ||\n      passHref ||\n      (child.type === 'a' && !('href' in child.props))\n    ) {\n      const curLocale = typeof locale !== 'undefined' ? locale : router?.locale\n\n      // we only render domain locales if we are currently on a domain locale\n      // so that locale links are still visitable in development/preview envs\n      const localeDomain =\n        router?.isLocaleDomain &&\n        getDomainLocale(as, curLocale, router?.locales, router?.domainLocales)\n\n      childProps.href =\n        localeDomain ||\n        addBasePath(addLocale(as, curLocale, router?.defaultLocale))\n    }\n\n    if (legacyBehavior) {\n      if (process.env.NODE_ENV === 'development') {\n        errorOnce(\n          '`legacyBehavior` is deprecated and will be removed in a future ' +\n            'release. A codemod is available to upgrade your components:\\n\\n' +\n            'npx @next/codemod@latest new-link .\\n\\n' +\n            'Learn more: https://nextjs.org/docs/app/building-your-application/upgrading/codemods#remove-a-tags-from-link-components'\n        )\n      }\n      return React.cloneElement(child, childProps)\n    }\n\n    return (\n      <a {...restProps} {...childProps}>\n        {children}\n      </a>\n    )\n  }\n)\n\nconst LinkStatusContext = createContext<{\n  pending: boolean\n}>({\n  // We do not support link status in the Pages Router, so we always return false\n  pending: false,\n})\n\nexport const useLinkStatus = () => {\n  // This behaviour is like React's useFormStatus. When the component is not under\n  // a <form> tag, it will get the default value, instead of throwing an error.\n  return useContext(LinkStatusContext)\n}\n\nexport default Link\n","module.exports = require('./dist/client/link')\n","type SvgProps = React.SVGProps<SVGSVGElement>;\n\nconst SearchIcon = (props: SvgProps) => (\n  <svg\n    width=\"800px\"\n    height=\"800px\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M11 6C13.7614 6 16 8.23858 16 11M16.6588 16.6549L21 21M19 11C19 15.4183 15.4183 19 11 19C6.58172 19 3 15.4183 3 11C3 6.58172 6.58172 3 11 3C15.4183 3 19 6.58172 19 11Z\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst DownIcon = (props: SvgProps) => (\n  <svg\n    width=\"800px\"\n    height=\"800px\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M8 12L12 16M12 16L16 12M12 16V4M4 20H20\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst NewWindowIcon = (props: SvgProps) => (\n  <svg\n    width=\"800px\"\n    height=\"800px\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M7 17L17 7M17 7H8M17 7V16\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst BrowserIcon = (props: SvgProps) => (\n  <svg\n    width=\"800px\"\n    height=\"800px\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M3 10H21M6 7.5H6.01M9 7.5H18M6.2 19H17.8C18.9201 19 19.4802 19 19.908 18.782C20.2843 18.5903 20.5903 18.2843 20.782 17.908C21 17.4802 21 16.9201 21 15.8V8.2C21 7.0799 21 6.51984 20.782 6.09202C20.5903 5.71569 20.2843 5.40973 19.908 5.21799C19.4802 5 18.9201 5 17.8 5H6.2C5.0799 5 4.51984 5 4.09202 5.21799C3.71569 5.40973 3.40973 5.71569 3.21799 6.09202C3 6.51984 3 7.07989 3 8.2V15.8C3 16.9201 3 17.4802 3.21799 17.908C3.40973 18.2843 3.71569 18.5903 4.09202 18.782C4.51984 19 5.07989 19 6.2 19Z\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst ArrowDownIcon = (props: SvgProps) => (\n  <svg\n    width=\"800px\"\n    height=\"800px\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M6 9L12 15L18 9\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst ArrowLeftIcon = (props: SvgProps) => (\n  <svg\n    width=\"800px\"\n    height=\"800px\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M15 6L9 12L15 18\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst ArrowLeftDoubleIcon = (props: SvgProps) => (\n  <svg\n    width=\"800px\"\n    height=\"800px\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M18 17L13 12L18 7M11 17L6 12L11 7\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst ArrowRightDoubleIcon = (props: SvgProps) => (\n  <svg\n    width=\"800px\"\n    height=\"800px\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M6 17L11 12L6 7M13 17L18 12L13 7\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst ArrowRightIcon = (props: SvgProps) => (\n  <svg\n    width=\"800px\"\n    height=\"800px\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M9 6L15 12L9 18\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst InfoIcon = (props: SvgProps) => (\n  <svg\n    width=\"800px\"\n    height=\"800px\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M12 8H12.01M12 11V16M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst CodeIcon = (props: SvgProps) => (\n  <svg\n    width=\"800px\"\n    height=\"800px\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M7 8L3 11.6923L7 16M17 8L21 11.6923L17 16M14 4L10 20\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst EyeOpenIcon = (props: SvgProps) => (\n  <svg\n    width=\"800px\"\n    height=\"800px\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M3 14C3 9.02944 7.02944 5 12 5C16.9706 5 21 9.02944 21 14M17 14C17 16.7614 14.7614 19 12 19C9.23858 19 7 16.7614 7 14C7 11.2386 9.23858 9 12 9C14.7614 9 17 11.2386 17 14Z\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst EyeOffIcon = (props: SvgProps) => (\n  <svg\n    width=\"800px\"\n    height=\"800px\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M9.60997 9.60714C8.05503 10.4549 7 12.1043 7 14C7 16.7614 9.23858 19 12 19C13.8966 19 15.5466 17.944 16.3941 16.3878M21 14C21 9.02944 16.9706 5 12 5C11.5582 5 11.1238 5.03184 10.699 5.09334M3 14C3 11.0069 4.46104 8.35513 6.70883 6.71886M3 3L21 21\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst CloseIcon = (props: SvgProps) => (\n  <svg\n    width=\"800px\"\n    height=\"800px\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M4 4L20 20M20 4L4 20\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\n// 네임스페이스 export\nexport const Icon = {\n  search: SearchIcon,\n  newWindow: NewWindowIcon,\n  down: DownIcon,\n  browser: BrowserIcon,\n  arrowDown: ArrowDownIcon,\n  arrowLeft: ArrowLeftIcon,\n  arrowLeftDouble: ArrowLeftDoubleIcon,\n  arrowRightDouble: ArrowRightDoubleIcon,\n  arrowRight: ArrowRightIcon,\n  info: InfoIcon,\n  code: CodeIcon,\n  eyeOpen: EyeOpenIcon,\n  eyeOff: EyeOffIcon,\n  close: CloseIcon,\n} as const;\n\nexport type IconName = keyof typeof Icon;\n","import { cx } from '../../lib/cx';\nimport { Icon } from '../Icon/index';\n\nconst icons = {\n  search: <Icon.search />,\n  new: <Icon.newWindow />,\n  down: <Icon.down />,\n} as const;\n\ntype IconKey = keyof typeof icons | 'null' | undefined;\n\ntype BaseProps = {\n  size?: 'sm' | 'md' | 'lg';\n  style?: 'fill' | 'line' | 'text';\n  icon?: IconKey;\n  align?: 'left' | 'center' | 'right';\n  color?: 'white' | 'dark' | 'point';\n  disabled?: boolean;\n  children?: React.ReactNode;\n  className?: string;\n};\n\ntype ButtonProps = BaseProps & React.ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst Button = ({\n  size = 'md',\n  style = 'fill',\n  icon,\n  align = 'left',\n  color = 'white',\n  disabled = false,\n  children = '버튼',\n  onClick,\n  className = '',\n  ...rest\n}: ButtonProps) => {\n  return (\n    <button\n      type=\"button\"\n      className={cx(\n        'button__default',\n        `size--${size}`,\n        `align--${align}`,\n        `color--${color}`,\n        `style--${style}`,\n        'no-drag',\n        className,\n        disabled && 'is-disabled',\n      )}\n      disabled={disabled}\n      onClick={onClick}\n      {...rest}\n    >\n      {icon && icon !== 'null' && <span className=\"icon\">{icons[icon as keyof typeof icons]}</span>}\n      <span className=\"button__text\">{children}</span>\n    </button>\n  );\n};\n\nexport default Button;\n","import Link from 'next/link';\nimport { cx } from '../../lib/cx';\nimport { Icon } from '../Icon';\n\nconst icons = {\n  search: <Icon.search />,\n  new: <Icon.newWindow />,\n  down: <Icon.down />,\n} as const;\n\ntype IconKey = keyof typeof icons | 'null' | undefined;\n\ntype BaseProps = {\n  size?: 'sm' | 'md' | 'lg';\n  style?: 'fill' | 'line' | 'text';\n  icon?: IconKey;\n  align?: 'left' | 'center' | 'right';\n  color?: 'white' | 'dark' | 'point';\n  disabled?: boolean;\n  children?: React.ReactNode;\n  className?: string;\n  href: string;\n  target?: '_self' | '_blank' | '_parent' | '_top';\n} & React.AnchorHTMLAttributes<HTMLAnchorElement>;\n\nconst ButtonLink = ({\n  size = 'md',\n  style = 'fill',\n  icon,\n  align = 'left',\n  color = 'white',\n  children = '링크',\n  className = '',\n  href = '#',\n  target = '_self',\n  ...rest\n}: BaseProps) => {\n  return (\n    <Link\n      href={href}\n      className={cx(\n        'button__default',\n        `size--${size}`,\n        `align--${align}`,\n        `color--${color}`,\n        `style--${style}`,\n        'no-drag',\n        className,\n      )}\n      target={target}\n      {...rest}\n    >\n      {icon && icon !== 'null' && <span className=\"icon\">{icons[icon as keyof typeof icons]}</span>}\n      <span className=\"button__text\">{children}</span>\n    </Link>\n  );\n};\n\nexport default ButtonLink;\n","import { cx } from '../../lib/cx';\n\ntype ButtonGroupProps = {\n  alignGroup?: 'left' | 'center' | 'right' | 'down' | 'full';\n  children?: React.ReactNode;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst ButtonGroup = ({ alignGroup = 'left', children, ...rest }: ButtonGroupProps) => {\n  return (\n    <div className={cx('button__group', `button__group-${alignGroup}`)} {...rest}>\n      {children}\n    </div>\n  );\n};\n\nexport default ButtonGroup;\n","import BaseButton from './Button';\nimport ButtonLink from './ButtonLink';\nimport ButtonGroup from './ButtonGroup';\n\nexport const Button = Object.assign(BaseButton, {\n  Link: ButtonLink,\n  Group: ButtonGroup,\n});\n\nexport default Button;\n","'use client';\n\nimport { useState, useId } from 'react';\nimport { cx } from '../../lib/cx';\n\ntype CheckboxProps = {\n  name?: string;\n  label?: React.ReactNode;\n  value?: string;\n  size?: 'sm' | 'md' | 'lg';\n  checked?: boolean; // controlled when provided; otherwise uncontrolled\n  defaultChecked?: boolean; // initial value for uncontrolled mode\n  disabled?: boolean;\n  required?: boolean;\n  className?: string;\n  onChange?: React.ChangeEventHandler<HTMLInputElement>;\n  color?: 'white' | 'dark' | 'point';\n  [key: string]: any;\n};\n\nconst Checkbox = ({\n  name,\n  label,\n  value,\n  size = 'md',\n  checked,\n  defaultChecked = false,\n  disabled = false,\n  required = false,\n  className = '',\n  onChange,\n  color = 'white',\n  ...rest\n}: CheckboxProps) => {\n  const checkboxId = useId();\n  const isControlled = checked !== undefined;\n  const [internalChecked, setInternalChecked] = useState<boolean>(defaultChecked);\n  const currentChecked = isControlled ? (checked as boolean) : internalChecked;\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const next = e.target.checked;\n    if (!isControlled) setInternalChecked(next);\n    onChange?.(e);\n  };\n\n  // 경고 방지: default*는 input에 전달하지 않음(호출부에서 넘겨도 제거)\n  const {\n    defaultValue: _omitDefaultValue,\n    defaultChecked: _omitDefaultChecked,\n    ...restSafe\n  } = rest || {};\n\n  return (\n    <label\n      className={cx(\n        'input__checkbox',\n        size && `size--${size}`,\n        color && `color--${color}`,\n        disabled && 'is-disabled',\n        className,\n      )}\n    >\n      <input\n        type=\"checkbox\"\n        id={checkboxId}\n        name={name}\n        value={value}\n        checked={currentChecked}\n        disabled={disabled}\n        required={required}\n        aria-required={required}\n        aria-checked={currentChecked}\n        aria-label={typeof label === 'string' ? label : undefined}\n        onChange={handleChange}\n        {...restSafe}\n      />\n      <span className=\"checkbox__custom\" aria-hidden=\"true\" />\n      {label && <span className=\"checkbox__label\">{label}</span>}\n      {required && !currentChecked && (\n        <p id={checkboxId} className=\"error-message\" role=\"alert\">\n          필수 선택입니다.\n        </p>\n      )}\n    </label>\n  );\n};\n\nexport default Checkbox;\n","'use client';\n\nimport { useId, useState } from 'react';\nimport { cx } from '../../lib/cx';\nimport Checkbox from './Checkbox';\n\ntype CheckboxOption = {\n  label: React.ReactNode;\n  value: string;\n  disabled?: boolean;\n};\n\ntype CheckboxGroupProps = {\n  options?: CheckboxOption[];\n  name?: string;\n  value?: string[]; // controlled\n  defaultChecked?: string[];\n  label?: React.ReactNode;\n  direction?: 'row' | 'column';\n  optionType?: 'default' | 'button';\n  disabled?: boolean;\n  groupDisabled?: boolean;\n  required?: boolean;\n  color?: 'white' | 'dark' | 'point';\n  size?: 'sm' | 'md' | 'lg';\n  className?: string;\n  onChange?: (next: string[]) => void;\n  [key: string]: any;\n};\n\nconst CheckboxGroup = ({\n  options = [],\n  name = '',\n  value,\n  defaultChecked = [],\n  label,\n  direction = 'row',\n  optionType = 'default',\n  disabled = false,\n  groupDisabled = false,\n  required = false,\n  color = 'white',\n  size = 'md',\n  className = '',\n  onChange,\n  ...rest\n}: CheckboxGroupProps) => {\n  const isControlled = value !== undefined;\n  const [internalValue, setInternalValue] = useState<string[]>(defaultChecked);\n  const currentValue = isControlled ? value! : internalValue;\n  const isInvalid = required && currentValue.length === 0;\n  const errorId = useId();\n\n  const handleChange = (optionValue: string) => (e: React.ChangeEvent<HTMLInputElement>) => {\n    const next = e.target.checked\n      ? currentValue.includes(optionValue)\n        ? currentValue\n        : [...currentValue, optionValue]\n      : currentValue.filter((v) => v !== optionValue);\n\n    if (!isControlled) setInternalValue(next);\n    onChange?.(next);\n  };\n\n  return (\n    <div className=\"checkbox__group-container\">\n      <div\n        className={cx(\n          'checkbox__group',\n          optionType && `checkbox__group-option-${optionType}`,\n          direction && `checkbox__group-direction-${direction}`,\n          color && `checkbox__group-color-${color}`,\n          groupDisabled && 'is-disabled',\n          className,\n        )}\n        role=\"group\"\n        aria-describedby={isInvalid ? errorId : undefined}\n      >\n        {options.map((option: CheckboxOption) => (\n          <Checkbox\n            key={option.value}\n            label={option.label}\n            value={option.value}\n            name={name}\n            checked={currentValue.includes(option.value)}\n            disabled={option.disabled ?? groupDisabled ?? disabled}\n            color={color}\n            size={size}\n            onChange={handleChange(option.value)}\n            {...rest}\n          />\n        ))}\n      </div>\n      {isInvalid && (\n        <p id={errorId} className=\"error-message\" role=\"alert\">\n          필수 선택입니다.\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CheckboxGroup;\n","import Checkbox from './Checkbox';\nimport CheckboxGroup from './CheckboxGroup';\n\n// 타입 안전한 서브컴포넌트 연결\nconst _Checkbox = Checkbox as typeof Checkbox & { Group: typeof CheckboxGroup };\n(_Checkbox as any).Group = CheckboxGroup;\n\nexport default _Checkbox;\n","import type React from 'react';\nimport { cx } from '../../lib/cx';\n\ntype FlexProps = {\n  direction?: string;\n  justify?: string;\n  align?: string;\n  gap?: string;\n  wrap?: string;\n  className?: string;\n  children?: React.ReactNode;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Flex = ({\n  direction = '',\n  justify = '',\n  align = '',\n  gap = '',\n  wrap = '',\n  className = '',\n  children,\n  ...rest\n}: FlexProps) => {\n  const flaxClassName = cx(\n    'flex',\n    direction && `flex--direction-${direction}`,\n    justify && `flex--justify-${justify}`,\n    align && `flex--align-${align}`,\n    gap && `flex--gap-${gap}`,\n    wrap && `flex--wrap-${wrap}`,\n    className,\n  );\n  return (\n    <div className={flaxClassName} {...rest}>\n      {children}\n    </div>\n  );\n};\n\nexport default Flex;\n","type GetValidationParams = {\n  required?: boolean;\n  validate?: (value: any) => boolean | string;\n  label?: string;\n  min?: number;\n  max?: number;\n  value?: any;\n  type?: 'text' | 'number' | 'email' | 'tel' | string;\n};\n\nconst getValidationMessage = ({\n  required = false,\n  validate,\n  label = '입력값',\n  min,\n  max,\n  value,\n  type,\n}: GetValidationParams) => {\n  // required 체크\n  const trimmedValue = (value ?? '').toString().trim();\n  if (required && trimmedValue === '') {\n    console.log('required');\n    return `${label || '입력값'} 은(는) 필수 입력 사항입니다.`;\n  }\n\n  // min/max 체크\n  const isNumber = !isNaN(Number(trimmedValue)) && trimmedValue !== '';\n  if (type === 'number' && !isNumber) {\n    console.log('number');\n    return '숫자만 입력하세요.';\n  }\n\n  if (type === 'number' && isNumber) {\n    console.log('number min/max');\n    const num = Number(trimmedValue);\n    const minNum = !isNaN(Number(min)) ? Number(min) : null;\n    const maxNum = !isNaN(Number(max)) ? Number(max) : null;\n    if (minNum !== null && num < minNum) {\n      return `최소 ${minNum}자 이상 입력해주세요.`;\n    }\n    if (maxNum !== null && num > maxNum) {\n      return `최대 ${maxNum}자 이하로 입력해주세요.`;\n    }\n  }\n\n  if (type !== 'number') {\n    console.log('number else min/max');\n    const minLength = typeof min === 'number' ? Number(min) : undefined;\n    const maxLength = typeof max === 'number' ? Number(max) : undefined;\n    console.log('minLength', minLength);\n    console.log('maxLength', maxLength);\n    if (minLength !== undefined && trimmedValue.length < minLength) {\n      return `최소 ${minLength}자 이상 입력해주세요.`;\n    }\n    if (maxLength !== undefined && trimmedValue.length > maxLength) {\n      return `최대 ${maxLength}자 이하로 입력해주세요.`;\n    }\n  }\n\n  // tel 체크\n  if (type === 'tel') {\n    console.log('tel');\n    const telRegex = /^01([0|1|6|7|8|9])-?([0-9]{4})-?([0-9]{4})$/;\n    if (!telRegex.test(value)) {\n      return '전화번호 형식이 올바르지 않습니다.';\n    }\n  }\n\n  // mail 체크\n  if (type === 'email') {\n    console.log('email');\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(value)) {\n      return '이메일 형식이 올바르지 않습니다.';\n    }\n  }\n\n  // validate 체크\n  if (validate) {\n    console.log('validate');\n    const result = validate(value);\n    if (result !== true) return result || '입력값을 확인해주세요.';\n  }\n\n  return true;\n};\n\nexport default getValidationMessage;\n","'use client';\n\nimport { useId, useState } from 'react';\nimport type { ChangeEvent } from 'react';\nimport { cx } from '../../lib/cx';\nimport { Icon } from '../Icon';\nimport getValidationMessage from '../../lib/getValidationMessage';\n\nconst Input = ({\n  size = 'md',\n  type = 'text',\n  error,\n  hint,\n  required = false,\n  disabled = false,\n  readOnly = false,\n  placeholder = '',\n  label = '',\n  value: propValue,\n  onChange,\n  onReset,\n  className = '',\n  validate,\n  min,\n  max,\n  errorBlur = false,\n  errorTouched,\n  ...rest\n}: {\n  size?: 'sm' | 'md' | 'lg';\n  type?: 'text' | 'password' | 'number' | 'tel' | 'email';\n  error?: boolean;\n  hint?: string;\n  required?: boolean;\n  disabled?: boolean;\n  readOnly?: boolean;\n  placeholder?: string;\n  label?: string;\n  value?: string;\n  onChange?: (value: string) => void;\n  onReset?: () => void;\n  className?: string;\n  validate?: (value: any) => boolean | string;\n  min?: number;\n  max?: number;\n  errorBlur?: boolean;\n  errorTouched?: boolean;\n  [key: string]: any;\n}) => {\n  const isControlled = propValue !== undefined;\n  const [internalValue, setInternalValue] = useState('');\n  const [touched, setTouched] = useState(false);\n  const currentValue = isControlled ? propValue || '' : internalValue;\n  const [errorMessage, setErrorMessage] = useState('');\n  const [hintVisible, setHintVisible] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const inputId = useId();\n  const errorId = `${inputId}-error`;\n  const hintId = `${inputId}-hint`;\n  const isTouched = errorTouched !== undefined ? errorTouched : touched;\n\n  const showHintMessage = hintVisible && !(error || errorMessage);\n  const showErrorMessage = !hintVisible && (error || errorMessage) && (errorTouched || touched);\n\n  const handleFocus = () => {\n    if (hint) setHintVisible(true);\n  };\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const newValue = e.target.value;\n\n    if (!readOnly) {\n      if (!isControlled) {\n        setInternalValue(newValue);\n      }\n      onChange?.(newValue);\n    }\n\n    if (newValue.trim() !== '') {\n      setErrorMessage('');\n    }\n  };\n\n  const handleReset = () => {\n    setTouched(false);\n    setInternalValue('');\n    setErrorMessage('');\n    setHintVisible(false);\n    onReset?.();\n  };\n\n  const handleBlur = () => {\n    setTouched(true);\n    setHintVisible(false);\n    if (errorBlur || !error) {\n      validateValue();\n      console.log('validateValue');\n    }\n  };\n\n  const validateValue = () => {\n    const result = getValidationMessage({\n      required,\n      validate,\n      label,\n      min,\n      max,\n      value: currentValue,\n      type,\n    });\n\n    if (result !== true) {\n      setErrorMessage(result);\n      return false;\n    }\n\n    setErrorMessage('');\n    return true;\n  };\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  return (\n    <span\n      className={cx(\n        'input__text',\n        (error || errorMessage) && 'input__text-error',\n        required && 'input__text-required',\n        hint && 'input__text-hint',\n        disabled && 'is-disabled',\n        readOnly && 'is-readOnly',\n        className,\n      )}\n    >\n      <span className=\"input__text-wrapper\">\n        <input\n          id={inputId}\n          value={currentValue}\n          type={type === 'password' && showPassword ? 'text' : type}\n          className={`input__default size--${size}`}\n          disabled={disabled}\n          readOnly={readOnly}\n          required={required}\n          aria-required={required}\n          aria-label={label}\n          placeholder={placeholder}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          onFocus={handleFocus}\n          aria-describedby={error || errorMessage ? errorId : hint}\n          {...rest}\n        />\n        {!readOnly && currentValue !== '' && type !== 'number' && (\n          <button className=\"button__reset\" onClick={handleReset} aria-label=\"reset\">\n            <Icon.close />\n          </button>\n        )}\n        {!readOnly && type === 'password' && (\n          <button\n            className=\"button__eye\"\n            onClick={togglePasswordVisibility}\n            aria-label=\"toggle password visibility\"\n          >\n            {showPassword ? <Icon.eyeOff /> : <Icon.eyeOpen />}\n          </button>\n        )}\n      </span>\n      {!readOnly && showErrorMessage && (\n        <p id={errorId} className=\"error-message\" role=\"alert\">\n          {error || errorMessage || '입력값을 확인해주세요.'}\n        </p>\n      )}\n      {!readOnly && showHintMessage && (\n        <p id={hintId} className=\"hint-message\" role=\"alert\">\n          {hint || '힌트! 입력값을 확인해주세요'}\n        </p>\n      )}\n    </span>\n  );\n};\n\nexport default Input;\n","import Input from './Input';\nimport type { ComponentProps } from 'react';\n\ntype BaseInputProps = ComponentProps<typeof Input>;\nconst InputText = (props: Omit<BaseInputProps, 'type'>) => {\n  return <Input {...props} type=\"text\" />;\n};\n\nexport default InputText;\n","'use client';\n\nimport Input from './Input';\nimport type { ComponentProps } from 'react';\n\ntype BaseInputProps = ComponentProps<typeof Input>;\nconst InputPassword = (props: Omit<BaseInputProps, 'type'>) => {\n  return <Input {...props} type=\"password\" />;\n};\n\nexport default InputPassword;\n","import Input from './Input';\nimport type { ComponentProps } from 'react';\n\ntype BaseInputProps = ComponentProps<typeof Input>;\nconst InputEmail = (props: Omit<BaseInputProps, 'type'>) => {\n  return <Input {...props} type=\"email\" />;\n};\n\nexport default InputEmail;\n","import Input from './Input';\nimport type { ComponentProps } from 'react';\n\ntype BaseInputProps = ComponentProps<typeof Input>;\nconst InputNumber = (props: Omit<BaseInputProps, 'type'>) => {\n  return <Input {...props} type=\"number\" />;\n};\n\nexport default InputNumber;\n","import Input from './Input';\nimport type { ComponentProps } from 'react';\n\ntype BaseInputProps = ComponentProps<typeof Input>;\nconst InputTel = (props: Omit<BaseInputProps, 'type'>) => {\n  // const validateTel = (val) => {\n  //     const telRegex = /^01([0|1|6|7|8|9])-?([0-9]{4})-?([0-9]{4})$/;\n  //     if (!telRegex.test(val)) {\n  //         return '전화번호 형식이 올바르지 않습니다.';\n  //     }\n  //     return true;\n  // }\n  return <Input {...props} type=\"tel\" />;\n};\n\nexport default InputTel;\n","import InputBase from './Input';\nimport InputText from './InputText';\nimport InputPassword from './InputPassword';\nimport InputEmail from './InputEmail';\nimport InputNumber from './InputNumber';\nimport InputTel from './InputTel';\n\nconst Input = {\n  Text: InputText,\n  Password: InputPassword,\n  Email: InputEmail,\n  Number: InputNumber,\n  Tel: InputTel,\n};\n\nexport default Input;\n","import { cx } from '../../lib/cx';\nimport { Icon } from '../Icon';\n\nconst Pagination = ({\n  total,\n  pageSize,\n  current,\n  onChange,\n  ellipsis = true,\n  paginationPosition,\n}: {\n  total: number;\n  pageSize: number;\n  current: number;\n  onChange: (page: number) => void;\n  ellipsis?: boolean;\n  paginationPosition?:\n    | 'topLeft'\n    | 'topRight'\n    | 'topCenter'\n    | 'bottomLeft'\n    | 'bottomRight'\n    | 'bottomCenter';\n}) => {\n  const totalPages = Math.max(1, Math.ceil(total / pageSize));\n\n  const clamp = (n: number) => Math.min(Math.max(n, 1), totalPages);\n  const goTo = (page: number) => {\n    const next = clamp(page);\n    if (next !== current) onChange(next);\n  };\n\n  const getPages = (): (number | 'ellipsis')[] => {\n    // ellipsis가 false이면 전체 페이지 노출 (1 ~ totalPages)\n    if (!ellipsis) return Array.from({ length: totalPages }, (_, i) => i + 1);\n\n    const pages: (number | 'ellipsis')[] = [];\n    pages.push(1);\n    const start = Math.max(2, current - 1);\n    const end = Math.min(totalPages - 1, current + 1);\n    if (start > 2) pages.push('ellipsis');\n    for (let p = start; p <= end; p += 1) pages.push(p);\n    if (end < totalPages - 1) pages.push('ellipsis');\n    if (totalPages > 1) pages.push(totalPages);\n    return pages;\n  };\n\n  const isFirstDisabled = current <= 1;\n  const isLastDisabled = current >= totalPages;\n\n  let area: 'top' | 'bottom' | undefined;\n  if (paginationPosition?.startsWith('top')) {\n    area = 'top';\n  } else if (paginationPosition?.startsWith('bottom')) {\n    area = 'bottom';\n  } else {\n    area = undefined;\n  }\n\n  let side: 'left' | 'right' | 'center' | undefined;\n  if (paginationPosition?.endsWith('Left')) {\n    side = 'left';\n  } else if (paginationPosition?.endsWith('Right')) {\n    side = 'right';\n  } else if (paginationPosition?.endsWith('Center')) {\n    side = 'center';\n  } else {\n    side = undefined;\n  }\n\n  return (\n    <div\n      className={cx(\n        'pagination',\n        side === 'left' && 'pagination--left',\n        side === 'center' && 'pagination--center',\n        side === 'right' && 'pagination--right',\n        area === 'top' && 'pagination--top',\n        area === 'bottom' && 'pagination--bottom',\n      )}\n      role=\"navigation\"\n      aria-label=\"pagination\"\n    >\n      <div className={cx('pagination__inner', ellipsis && 'pagination__inner--ellipsis')}>\n        {!isFirstDisabled && (\n          <button\n            type=\"button\"\n            className=\"pagination__button pagination__button-first\"\n            onClick={() => goTo(1)}\n            aria-label=\"First page\"\n          >\n            <Icon.arrowLeftDouble />\n          </button>\n        )}\n        {!isFirstDisabled && (\n          <button\n            type=\"button\"\n            className=\"pagination__button pagination__button-prev\"\n            onClick={() => goTo(current - 1)}\n            aria-label=\"Previous page\"\n          >\n            <Icon.arrowLeft />\n          </button>\n        )}\n        <div className=\"pagination__number\">\n          {getPages().map((item, idx) =>\n            item === 'ellipsis' ? (\n              <span key={`e-${idx}`} className=\"pagination__ellipsis\" aria-hidden>\n                …\n              </span>\n            ) : (\n              <button\n                key={item}\n                type=\"button\"\n                className={`pagination__number-page ${current === item ? 'is-active' : ''}`}\n                aria-current={current === item ? 'page' : undefined}\n                onClick={() => goTo(item)}\n              >\n                {item}\n              </button>\n            ),\n          )}\n        </div>\n        {!isLastDisabled && (\n          <button\n            type=\"button\"\n            className=\"pagination__button pagination__button-next\"\n            onClick={() => goTo(current + 1)}\n            aria-label=\"Next page\"\n          >\n            <Icon.arrowRight />\n          </button>\n        )}\n        {!isLastDisabled && (\n          <button\n            type=\"button\"\n            className=\"pagination__button pagination__button-last\"\n            onClick={() => goTo(totalPages)}\n            aria-label=\"Last page\"\n          >\n            <Icon.arrowRightDouble />\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Pagination;\n","'use client';\n\nimport { useId } from 'react';\nimport { cx } from '../../lib/cx';\n\ntype RadioProps = {\n  name?: string;\n  label?: React.ReactNode;\n  value?: string;\n  size?: 'sm' | 'md' | 'lg';\n  checked?: boolean;\n  disabled?: boolean;\n  required?: boolean;\n  className?: string;\n  onChange?: React.ChangeEventHandler<HTMLInputElement>;\n  color?: 'white' | 'dark' | 'point';\n  [key: string]: any;\n};\n\nconst Radio = ({\n  name,\n  label,\n  value,\n  size = 'md',\n  checked,\n  disabled = false,\n  required = false,\n  className = '',\n  onChange,\n  color = 'white',\n  ...rest\n}: RadioProps) => {\n  const radioId = useId();\n  const labelId = `${radioId}-label`;\n  const isChecked = !!checked;\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target) {\n      onChange?.(e);\n    }\n  };\n\n  return (\n    <label\n      className={cx(\n        'input__radio',\n        `size--${size}`,\n        `color--${color}`,\n        disabled && 'is-disabled',\n        className,\n      )}\n    >\n      <input\n        type=\"radio\"\n        id={radioId}\n        name={name}\n        value={value}\n        {...(checked !== undefined ? { checked } : {})}\n        disabled={disabled}\n        required={required}\n        aria-label={typeof label === 'string' ? label : undefined}\n        onChange={(e) => handleChange(e)}\n        {...rest}\n      />\n      <span className=\"radio__custom\" aria-hidden=\"true\" />\n      {label && <span className=\"radio__label\">{label}</span>}\n      {required && !isChecked && (\n        <p id={labelId} className=\"error-message\" role=\"alert\">\n          필수 선택입니다.\n        </p>\n      )}\n    </label>\n  );\n};\n\nexport default Radio;\n","'use client';\n\nimport { useState, useEffect } from 'react';\nimport { cx } from '../../lib/cx';\nimport Radio from './Radio';\n\ntype RadioOption = {\n  label: React.ReactNode;\n  value: string;\n};\n\ntype RadioGroupProps = {\n  options?: RadioOption[];\n  name?: string;\n  value?: string; // controlled\n  checked?: string; // uncontrolled initial\n  label?: string;\n  direction?: 'row' | 'column';\n  optionType?: 'default' | 'button';\n  children?: React.ReactNode;\n  disabled?: boolean;\n  required?: boolean;\n  color?: 'white' | 'dark' | 'point';\n  size?: 'sm' | 'md' | 'lg';\n  className?: string;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  [key: string]: any;\n};\n\nconst RadioGroup = ({\n  options = [],\n  name = '',\n  value,\n  checked,\n  label,\n  direction = 'row',\n  optionType = 'default',\n  children,\n  disabled = false,\n  required = false,\n  color = 'white',\n  size = 'md',\n  className = '',\n  onChange,\n  ...rest\n}: RadioGroupProps) => {\n  const isControlled = value !== undefined;\n  const [selectedValue, setSelectedValue] = useState(checked);\n  const currentValue = isControlled ? value : selectedValue;\n\n  useEffect(() => {\n    setSelectedValue(checked);\n  }, [checked]);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!isControlled) setSelectedValue(e.target.value);\n    onChange?.(e);\n  };\n\n  return (\n    <div className=\"radio__group-container\">\n      <div\n        className={cx(\n          'radio__group',\n          `radio__group-option-${optionType}`,\n          `radio__group-direction-${direction}`,\n          `radio__group-color-${color}`,\n          disabled && 'is-disabled',\n          className,\n        )}\n      >\n        {options.map((option: RadioOption) => (\n          <Radio\n            key={option.value}\n            label={option.label}\n            value={option.value}\n            name={name}\n            checked={currentValue === option.value}\n            disabled={disabled}\n            color={color}\n            size={size}\n            onChange={handleChange}\n            {...rest}\n          />\n        ))}\n      </div>\n      {required && !currentValue && (\n        <p className=\"error-message\" role=\"alert\">\n          필수 선택입니다.\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default RadioGroup;\n","'use client';\n\nimport Radio from './Radio';\nimport RadioGroup from './RadioGroup';\n\nconst _Radio = Radio as typeof Radio & { Group: typeof RadioGroup };\n(_Radio as any).Group = RadioGroup;\n\nexport default _Radio;\n","'use client';\n\nimport { useEffect, useMemo, useRef, useState, useId } from 'react';\nimport { cx } from '../../lib/cx';\nimport { Icon } from '../Icon';\n\nconst Select = ({\n  options,\n  size = 'md',\n  color = 'white',\n  minWidth,\n  maxWidth,\n  disabledValues,\n  defaultSelected,\n  className = '',\n}: {\n  options: {\n    value: string;\n    name: string;\n    disabled?: boolean;\n  }[];\n  size?: 'sm' | 'md' | 'lg';\n  color?: 'white' | 'dark' | 'point';\n  minWidth?: string;\n  maxWidth?: string;\n  disabledValues?: boolean;\n  defaultSelected?: { value: string };\n  className?: string;\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectTop, setSelectTop] = useState(true);\n  const [selected, setSelected] = useState<{ value: string; name: string } | null>(null);\n  const containerRef = useRef<HTMLDivElement | null>(null);\n  const listboxId = useId();\n\n  const currentLabel = useMemo(() => {\n    if (selected) return selected.name;\n    return options && options.length > 0 ? options[0].name : '';\n  }, [options, selected]);\n\n  useEffect(() => {\n    if (!defaultSelected) return;\n    const target = options.find((opt) => opt.value === defaultSelected.value);\n    if (!target) return;\n    if (target.disabled || disabledValues) return;\n    setSelected({ value: target.value, name: target.name });\n  }, [defaultSelected, defaultSelected?.value, options, disabledValues]);\n\n  const handleSelect = (\n    option: { value: string; name: string; disabled?: boolean },\n    index: number,\n  ) => {\n    const isDisabled = Boolean(option.disabled || disabledValues);\n    if (isDisabled) return;\n    setSelected(option);\n    setIsOpen(false);\n  };\n\n  const labelClickSelect = () => {\n    if (disabledValues) return;\n    setIsOpen((prev) => !prev);\n    const root = containerRef.current;\n    if (!root) return;\n    const labelEl = root.querySelector<HTMLElement>('.selectbox__label');\n    if (!labelEl) return;\n\n    const { top } = labelEl.getBoundingClientRect();\n    const viewportHeight = window.innerHeight || document.documentElement.clientHeight;\n    setSelectTop(top > viewportHeight / 2);\n  };\n\n  useEffect(() => {\n    if (typeof window === 'undefined') return;\n    const handleScroll = () => setIsOpen(false);\n    window.addEventListener('scroll', handleScroll, { passive: true });\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  // close when clicking outside the select container\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent | TouchEvent) => {\n      const root = containerRef.current;\n      if (!root) return;\n      const target = event.target as Node | null;\n      if (target && !root.contains(target)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside, true);\n    document.addEventListener('touchstart', handleClickOutside, true);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside, true);\n      document.removeEventListener('touchstart', handleClickOutside, true);\n    };\n  }, []);\n\n  const labelStyle = {\n    ['--selectbox-min-width' as any]: minWidth,\n    ['--selectbox-max-width' as any]: maxWidth,\n  } as React.CSSProperties;\n\n  return (\n    <div\n      ref={containerRef}\n      className={cx(\n        'selectbox',\n        'no-drag',\n        isOpen && 'is-open',\n        `size--${size}`,\n        `color--${color}`,\n        disabledValues && 'is-disabled',\n        className,\n        selectTop && 'selectbox__top',\n      )}\n      style={labelStyle}\n    >\n      <div className=\"selectbox__label\" onClick={() => labelClickSelect()}>\n        <span className=\"label\">{currentLabel}</span>\n        <span className=\"icon\">\n          <Icon.arrowDown />\n        </span>\n      </div>\n      {isOpen && (\n        <div className={`selectbox__input`}>\n          <ul>\n            {options.map((option, index) => {\n              const isDisabled = Boolean(option.disabled || disabledValues);\n              return (\n                <li\n                  key={option.value}\n                  role=\"option\"\n                  className={isDisabled ? 'is-disabled' : ''}\n                  tabIndex={isDisabled ? -1 : 0}\n                  aria-selected={option.value === selected?.value}\n                  aria-disabled={isDisabled}\n                  onClick={() => handleSelect(option, index)}\n                  // onKeyDown={(e) => handleKeyDown(e, option, index)}\n                >\n                  {option.name}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Select;\n","'use client';\n\nimport { useState } from 'react';\nimport Button from './Button/Button';\n\ntype SourceCodeViewerProps = {\n  code: string;\n  btnText?: string;\n  hidden?: boolean;\n  copy?: boolean;\n  className?: string;\n};\n\nconst SourceCodeViewer = ({\n  code,\n  btnText = '코드',\n  hidden = true,\n  copy = false,\n  className = '',\n}: SourceCodeViewerProps) => {\n  const [showCode, setShowCode] = useState(!hidden);\n\n  return (\n    <div className={`source-code-viewer ${className}`}>\n      {hidden && (\n        <Button\n          color=\"dark\"\n          style=\"fill\"\n          size=\"sm\"\n          align=\"right\"\n          onClick={() => setShowCode(!showCode)}\n          aria-pressed={showCode}\n        >\n          {showCode ? `Hide ${btnText}` : `Show ${btnText}`}\n        </Button>\n      )}\n      {(showCode || !hidden) && (\n        <>\n          {copy && (\n            <button type=\"button\" aria-label=\"Copy code\">\n              Copy\n            </button>\n          )}\n          <pre role=\"region\" aria-label=\"Source code\">\n            <code>{code}</code>\n          </pre>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default SourceCodeViewer;\n","import { cx } from '../../lib/cx';\nimport { useId } from 'react';\nimport Pagination from '../Pagination';\n\nconst Table = ({\n  caption,\n  bordered = false,\n  scroll = false,\n  dataSource,\n  columns,\n  footerContent,\n  pagination = 'none',\n  paginationProps,\n}: {\n  caption?: string;\n  bordered?: boolean;\n  scroll?: boolean;\n  dataSource: any[];\n  columns: any[];\n  footerContent?: string;\n  pagination?:\n    | 'topLeft'\n    | 'topRight'\n    | 'topCenter'\n    | 'bottomLeft'\n    | 'bottomRight'\n    | 'bottomCenter'\n    | 'none';\n  paginationProps?: {\n    total: number;\n    pageSize: number;\n    current: number;\n    onChange: (page: number) => void;\n    ellipsis?: boolean;\n  };\n}) => {\n  const uid = useId();\n  const descId = footerContent ? `table-desc-${uid}` : undefined;\n\n  return (\n    <div className={cx('table', scroll && 'table__scroll', bordered && 'table__borderd')}>\n      {(pagination === 'topLeft' || pagination === 'topRight' || pagination === 'topCenter') &&\n        paginationProps && (\n          <Pagination\n            total={paginationProps.total}\n            pageSize={paginationProps.pageSize}\n            current={paginationProps.current}\n            onChange={paginationProps.onChange}\n            ellipsis={paginationProps.ellipsis}\n            paginationPosition={pagination}\n          />\n        )}\n      <table {...(descId ? { 'aria-describedby': descId } : {})}>\n        {caption && <caption>{caption || '데이터 표'}</caption>}\n        <thead>\n          <tr>\n            {columns.map((column) => (\n              <th key={column.key} title={column.title} style={{ width: column.width }}>\n                <span>{column.title}</span>\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {dataSource.map((row, rowIndex) => (\n            <tr key={row.key}>\n              {columns.map((col, idx) => {\n                const onCell =\n                  typeof col.onCell === 'function' ? col.onCell(row, rowIndex) || {} : {};\n                const rowSpan = onCell.rowSpan ?? undefined;\n                const colSpan = onCell.colSpan ?? undefined;\n                const isMergedOut = rowSpan === 0 || colSpan === 0;\n                if (isMergedOut) return null;\n\n                const isRowHeaderCell = Boolean(\n                  onCell.isRowHeader || col.isRowHeader || (row.isRowHeader && idx === 0),\n                );\n                const CellTag: any = isRowHeaderCell ? 'th' : 'td';\n                const content =\n                  typeof col.render === 'function'\n                    ? col.render(row[col.dataIndex], row, rowIndex)\n                    : row[col.dataIndex];\n\n                return (\n                  <CellTag\n                    key={col.key}\n                    {...(rowSpan ? { rowSpan } : {})}\n                    {...(colSpan ? { colSpan } : {})}\n                    {...(isRowHeaderCell ? { scope: 'row', title: col.title } : {})}\n                  >\n                    {content}\n                  </CellTag>\n                );\n              })}\n            </tr>\n          ))}\n        </tbody>\n        {footerContent !== undefined && (\n          <tfoot>\n            <tr>\n              <th colSpan={columns.length}>{footerContent}</th>\n            </tr>\n          </tfoot>\n        )}\n      </table>\n      {footerContent && !caption && (\n        <p id={descId} className=\"sr-only\">\n          {footerContent}\n        </p>\n      )}\n      {(pagination === 'bottomLeft' ||\n        pagination === 'bottomRight' ||\n        pagination === 'bottomCenter') &&\n        paginationProps && (\n          <Pagination\n            total={paginationProps.total}\n            pageSize={paginationProps.pageSize}\n            current={paginationProps.current}\n            onChange={paginationProps.onChange}\n            ellipsis={paginationProps.ellipsis}\n            paginationPosition={pagination}\n          />\n        )}\n    </div>\n  );\n};\n\nexport default Table;\n","'use client';\n\nimport type React from 'react';\nimport { useRef } from 'react';\nimport { cx } from '../../lib/cx';\n\nconst Textarea = ({\n  resize = 'none',\n  className = '',\n  ...rest\n}: {\n  resize?: 'both' | 'none' | 'horizontal' | 'vertical';\n  className?: string;\n}) => {\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  return (\n    <div className=\"textarea\">\n      <textarea\n        ref={textareaRef}\n        className={cx('textarea__input', className)}\n        style={{ resize: resize }}\n        aria-multiline=\"true\"\n        {...rest}\n      />\n    </div>\n  );\n};\n\nexport default Textarea;\n","import type React from 'react';\nimport { cx } from '../../lib/cx';\n\ntype TitleProps = {\n  level?: 1 | 2 | 3 | 4 | 5 | 6;\n  title?: React.ReactNode;\n  titleClass?: string;\n  children?: React.ReactNode;\n  titleColor?: string;\n  titleWeight?: string;\n} & React.HTMLAttributes<HTMLHeadingElement>;\n\nconst Title = ({\n  level = 1,\n  title,\n  titleClass = '',\n  children,\n  titleColor = '',\n  titleWeight = '',\n  ...rest\n}: TitleProps) => {\n  const Tag: React.ElementType = `h${level}` as React.ElementType;\n  const content = title || children;\n\n  return content ? (\n    <Tag\n      className={cx(\n        `title__${level}`,\n        titleClass,\n        titleColor && `color__${titleColor}`,\n        titleWeight && `title__${titleWeight}`,\n      )}\n      {...rest}\n    >\n      {content}\n    </Tag>\n  ) : null;\n};\n\nexport default Title;\n","import type React from 'react';\nimport { cx } from '../../lib/cx';\n\ntype TextProps = {\n  textWeight?: '100' | '400' | '700' | string;\n  /** alias for textWeight to support existing usages */\n  weight?: '100' | '400' | '700' | string;\n  text?: React.ReactNode;\n  children?: React.ReactNode;\n  textClass?: string;\n  ptag?: boolean;\n  textColor?: string;\n  size?: 'default' | 'small' | 'xsmall' | string;\n  ellipsis?: string | number;\n} & React.HTMLAttributes<HTMLDivElement> &\n  React.HTMLAttributes<HTMLParagraphElement>;\n\nconst Text = ({\n  textWeight = '400',\n  weight,\n  text,\n  children,\n  textClass,\n  ptag = false,\n  textColor = '',\n  size = 'default',\n  ellipsis = '',\n  ...rest\n}: TextProps) => {\n  const Tag: React.ElementType = (ptag ? 'p' : 'div') as React.ElementType;\n  const effectiveWeight = textWeight ?? weight ?? '400';\n  const content = text || children;\n  return content ? (\n    <Tag\n      className={cx(\n        `text__${effectiveWeight}`,\n        textClass,\n        textColor && `color__${textColor}`,\n        `size__${size}`,\n        ellipsis && `ellipsis__${ellipsis}`,\n      )}\n      {...rest}\n    >\n      {content}\n    </Tag>\n  ) : null;\n};\n\nexport default Text;\n","import { cx } from '../../lib/cx';\n\nimport Title from './Title';\nimport Text from './Text';\n\ntype TypographyProps = {\n  className?: string;\n  level?: 1 | 2 | 3 | 4 | 5 | 6;\n  title?: React.ReactNode;\n  titleColor?: string;\n  titleClass?: string;\n  titleWeight?: string;\n  text?: React.ReactNode;\n  textWeight?: string;\n  /** alias for textWeight to support existing usages */\n  weight?: string;\n  textClass?: string;\n  textColor?: string;\n  ptag?: boolean;\n  size?: string;\n  ellipsis?: string;\n  children?: React.ReactNode;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nconst Typography = ({\n  // typography group\n  className = '',\n  // title\n  level = 1,\n  title,\n  titleColor,\n  titleClass,\n  titleWeight,\n  // text\n  text,\n  textWeight,\n  weight,\n  textClass,\n  textColor,\n  ptag,\n  size,\n  ellipsis,\n  ...rest\n}: TypographyProps) => {\n  return (\n    <div className={cx('typography--layout', className)}>\n      {title && (\n        <Title\n          level={level}\n          title={title}\n          titleClass={titleClass}\n          titleColor={titleColor}\n          titleWeight={titleWeight}\n          {...rest}\n        />\n      )}\n      {text && (\n        <Text\n          textWeight={textWeight ?? weight}\n          text={text}\n          textClass={textClass}\n          textColor={textColor}\n          ptag={ptag}\n          size={size}\n          ellipsis={ellipsis}\n          {...rest}\n        />\n      )}\n    </div>\n  );\n};\n\nTypography.Title = Title;\nTypography.Text = Text;\n\nexport default Typography;\n"]}