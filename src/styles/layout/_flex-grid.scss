@use 'sass:map';
@use '../abstracts' as *;

/* flex */
.flex {
  @include flex();
  &--direction {
    &-row {
      flex-direction: row;
    }
    &-column {
      flex-direction:column;
    }
  }

  &--justify{
    &-start {
      justify-content:flex-start;
    }
    &-center {
      justify-content:center;
    }
    &-end {
      justify-content:flex-end;
    }
    &-between {
      justify-content:space-between;
    }
    &-around {
      justify-content:space-around;
    }
    &-evenly {
      justify-content:space-evenly;
    }
  }

  &--align {
    &-start {
      align-items: flex-start;
    }
    &-center {
      align-items:center;
    }
    &-end {
      align-items:flex-end;
    }
  }

  &--gap {
    &-none {
      gap: map.get($gap-map, none);
    }
    &-sm {
      gap: map.get($gap-map, sm);
    }
    &-md {
      gap: map.get($gap-map, md);
    }
    &-lg {
      gap: map.get($gap-map, lg);
    }
    &-xl {
      gap: map.get($gap-map, xl);
    }
  }
  .flex--wrap {
    @include flex($wrap: wrap);
  }
  .flex--nowrap {
    @include flex($wrap: nowrap);
  }
}

/* grid */
.row {
  display: grid;
  grid-template-columns: repeat($grid-columns, 1fr);
  // margin-left: -($grid-gutter);
  // margin-right: -($grid-gutter);
  gap: $grid-gutter;
  width: 100%;
  box-sizing: border-box;
}
.col {
  padding-left: $grid-gutter;
  padding-right: $grid-gutter;
}

@for $i from 1 through $grid-columns {
  .col-#{$i} {
    @extend .col;
    grid-column: span $i;
  }
}

@include TAB {
  $grid-gutter: map.get($padding-base, 'TAB');
  @for $i from 1 through $grid-columns {
    .col-md-#{$i} {
      grid-column: span $i;
    }
  }
}

@include MO {
  $grid-gutter: map.get($padding-base, 'MO');
  @for $i from 1 through $grid-columns {
    .col-sm-#{$i} {
      grid-column: span $i;
    }
  }
}